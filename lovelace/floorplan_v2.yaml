# lovelace_gen

# http://patorjk.com/software/taag/#p=display&f=Banner3&t=Type%20Something%20

########  ######## ######## #### ##    ## #### ######## ####  #######  ##    ##  ######
##     ## ##       ##        ##  ###   ##  ##     ##     ##  ##     ## ###   ## ##    ##
##     ## ##       ##        ##  ####  ##  ##     ##     ##  ##     ## ####  ## ##
##     ## ######   ######    ##  ## ## ##  ##     ##     ##  ##     ## ## ## ##  ######
##     ## ##       ##        ##  ##  ####  ##     ##     ##  ##     ## ##  ####       ##
##     ## ##       ##        ##  ##   ###  ##     ##     ##  ##     ## ##   ### ##    ##
########  ######## ##       #### ##    ## ####    ##    ####  #######  ##    ##  ######
# DEFINITIONS

#--------------------------------------------------------------------------------------------------
# General
{% set debug = false %}
{% set border_radius = 12 %}
{% set background_color = 'rgba(255, 255, 255, 0.1)' %}
{% set background_color_alert = 'rgba(255, 0, 0, 0.2)' %}
{% set group_scaleX, group_scaleY = 1.5, 1.5 %}

{% set scheduler_left_offset, scheduler_top_offset = 1, 1 %}
{% set scheduler_scaleX, scheduler_scaleY = 0.6, 0.6 %}

{% set timer_top_offset = 2.5 %}

{% set days = [("sunday"   , "1", "Sun", "ראשון"),
               ("monday"   , "2", "Mon", "שני"),
               ("tuesday"  , "3", "Tue", "שלישי"),
               ("wednesday", "4", "Wed", "רביעי"),
               ("thursday" , "5", "Thu", "חמישי"),
               ("friday"   , "6", "Fri", "שישי"),
               ("saturday" , "7", "Sat", "שבת")] %}

#--------------------------------------------------------------------------------------------------
# Lights
#  - List all active areas.
#    If more than one exists with the same name - must be consecutive
#  - List groups for group buttons
#--------------------------------------------------------------------------------------------------
#                 entity                                                                ,    group       , left , top, scaleX, scaleY, deg)
{% set lights = [("smart_led_strip"                                                     , "downstairs"   ,  41  , 64  , 2.2   , 2.2  ,  0   ),
                ("1f_house_inside_entrance_light"                                       , "downstairs"   ,  51  , 52  , 2.8   , 1.8  ,  0   ),              
                ("1f_house_inside_ceiling_laundryroom_light"                            , "downstairs"   ,  58  , 49  , 1.8   , 2.5  ,  0   ),   
                ("1f_house_inside_livingroom_corner_light"                              , "downstairs"   ,  44  , 82  , 4.5   , 2.2  ,  0   ),
                ("2f_house_inside_ceiling_vilde_light"                                  , "upstairs"     ,  73  , 80  , 2.8   , 2.8  , -4   ),
                ("2f_house_inside_ceiling_adrian_light"                                 , "upstairs"     ,  89  , 80  , 3     , 3    , -6   ),
                ("2f_house_inside_ceiling_sturla_light"                                 , "upstairs"     ,  80  , 49  , 3.1   , 3.1  , -5   ),
                ("2f_house_inside_ceiling_hall_light"                                   , "upstairs"     ,  84  , 64  , 5.5   , 1.8  ,  0   ),
                ("1f_house_outside_entrance_light"                                      , "outside"      ,  46  , 42  , 1.5   , 1.5  ,  0   ),

                ("1f_outside_glamping"                                                  , "outside"      ,  4   , 75  , 2.5     , 2.5    ,  0   ),

                ("garage_inside_ceiling_light"                                          , "outside"      ,  12  , 49  , 6.4   , 5.1  ,  0   ),
                ("in_wall_dimmer_module"                                                , "outside"      ,  30  , 55  , 5     ,  6   ,  0   )] %}

#--------------------------------------------------------------------------------------------------
# dishwasher
#  - List active dishwasher.
#--------------------------------------------------------------------------------------------------
#                 entity                                             ,    group       , left , top, scaleX, scaleY, deg)
{% set dishwasher = [("binary_sensor.oppvaskmaskin_door"             , "kitchen"      ,  41  , 64  , 2.2   , 2.2  ,  0   ),
                    ("sensor.oppvaskmaskin_operation_state"          , "kitchen"      ,  51  , 52  , 2.8   , 1.8  ,  0   )] %}


#--------------------------------------------------------------------------------------------------
# Media
#--------------------------------------------------------------------------------------------------
#                 entity                                                                ,   group        , left , top, scaleX, scaleY, deg)
{% set media = [("samsung_q8_series_65"                                                 , "downstairs"   ,  45.7  , 76.3  , 0    ,0  ,  0   )] %}


#--------------------------------------------------------------------------------------------------
# Camera
#--------------------------------------------------------------------------------------------------
#                 entity                  PTZ script                                   ,   group        , left , top, scaleX, scaleY, deg)
{% set cameras = [("eigeland"            , "script.reolink_ptz"                        , "outside"      ,  37  , 90.3  , 0    ,0  ,  0   ),
                  ("stue"                , "script.tapo_ptz"                           , "outside"      ,  61  , 65    , 0    ,0  ,  0   )] %}

#--------------------------------------------------------------------------------------------------
# persons
#--------------------------------------------------------------------------------------------------
#                  entity                        , battery_level                     , charging                                   , left  , top)
{% set persons = [("bernt"                       , "bernt_christian_battery_level", "bernt_christian_battery_state"           ,  85   ,  4),
                  ("adrian"                      , "adrian_samsung_s20_battery_level", "adrian_samsung_s20_is_charging"           ,  89.5 ,  4)] %}


#                       group       , left, top
{% set light_groups = [("outside"   , 35, 38),
                       ("downstairs", 51, 38),
                       ("upstairs"  , 80, 38)] %}

#--------------------------------------------------------------------------------------------------
# HVAC
#--------------------------------------------------------------------------------------------------
#                 entity     , left, top
{% set hvacs = [("eigeland"  , 63  ,  38  )] %}

#--------------------------------------------------------------------------------------------------
# Navigation
#  - Entities are placed from bottom to top starting from navi_top value
#--------------------------------------------------------------------------------------------------
{% set navi_left, navi_top = 96, namespace(value=94) %}
{% set navi_left_offset, navi_top_offset = 1, 3 %}
{% set navi_scaleX, navi_scaleY, navi_scaleT = 0.3, 0.3, 3.5 %}
{% set navigations = ["kfar_yona", "petach_tikva", "work_aviva", "work_dan"] %}

#--------------------------------------------------------------------------------------------------
# Statusbar
#  - Icons are placed from right to left
#--------------------------------------------------------------------------------------------------
{% set statusbar_color = 'red' %}
{% set statusbar_left, statusbar_top = namespace(value=97), 1 %}
{% set statusbar_left_offset = -1.5 %}
{% set statusbar_scaleX, statusbar_scaleY = 0.8, 0.8 %}

#                           number,        entity                                        , state_t_f, state,      icon,             card_type
{# {% set statusbar_entities = [("1", "sensor.update_available"                                   , "t", "1",  "mdi:cloud-download", "ha_updates"),
                             ("2", "sensor.hp_deskjet_4620_series_ink_low"                     , "f", "0" , "mdi:printer-alert" , "entities"),
                             ("3", "sensor.water_consumption_limit_exceeded"                   , "f", "0" , "mdi:water-alert"   , "history-graph")] %} #}

{% set statusbar_details = [] %}

#--------------------------------------------------------------------------------------------------
# Settings
#  - Divided into "column" and seperated by "section"
#    If a sections is defined as "y" then the "label" is used as the header
#    The type can be either a "slider" or an "entity"
#--------------------------------------------------------------------------------------------------
{% set settings_color = 'gray' %}
{% set settings_left, settings_top = 98.5, 1 %}
{% set settings_scaleX, settings_scaleY = 0.8, 0.8 %}
#                             entity                                              , column, section, label                 , type slider, entity
{% set settings_entities = [("input_boolean.ui_hide_room_temperatures"                 , "2", "y", "Hide Elements"         , "entity"),
                            ("input_boolean.ui_hide_weather          "                 , "2", "n", ""                      , "entity"),
                            ("input_boolean.ui_hide_energy_price          "            , "2", "n", ""                      , "entity"),
                            ("input_boolean.ui_hide_calendar         "                 , "2", "n", ""                      , "entity"),
                            ("input_boolean.ui_hide_navigation"                        , "2", "n", ""                      , "entity"),
                            ("sensor.memory_free"                                      , "1", "y", "System"                , "entity")] %}

#--------------------------------------------------------------------------------------------------
# Actions
#  - Buttons are placed from left to right
#--------------------------------------------------------------------------------------------------
{% set actions_left, actions_top = namespace(value=60), -1 %}
{% set actions_left_offset = 8 %}
{% set actions_scaleX, actions_scaleY = 2, 2 %}

#                             entity
{% set actions_entities = [] %}


#--------------------------------------------------------------------------------------------------
# Zaptec chargers
#  - They include humidity and battery values as well
#--------------------------------------------------------------------------------------------------
#                              entity                                                  , category   ,   name         , left  ,  top ,  font_size
{% set car_chargers =        [("bernt_chr_egolf_charger"                              , "garage"   ,"Bernt eGolf"   ,  12   ,  46.6  ,    75  ),
                              ("sigrun_bmw_charger"                              , "garage"   ,"Sigrun BMW"    ,  10   ,  59    ,    75  )] %}


#--------------------------------------------------------------------------------------------------
# Temperature Sensors
#  - They include humidity and battery values as well
#--------------------------------------------------------------------------------------------------
#                              entity                                                   , category , left ,  top ,  font_size
{% set temperature_sensors = [("1f_house_inside_livingroom_termometer_temperature"      , "room"   ,  47  ,   85  ,    75  ),
                              ("1f_house_inside_entrance_termometer_temperature"        , "room"   ,  53  ,   71  ,    75  ),
                              ("2f_house_inside_hall_termometer_temperature"            , "room"   ,  80  ,   71  ,    75  ),
                              ("outside_temperature_sensor"                             , "room"   ,  32  ,   70  ,    120 ),
                              ("bedrom_temperature"                                     , "room"   ,  54.5  ,   86  ,    75 )] 
                              %}

#--------------------------------------------------------------------------------------------------
# Min renovasjon Sensors
#  - They include humidity and battery values as well
#--------------------------------------------------------------------------------------------------
#                              entity                   , category           , name              , left ,  top ,  font_size
{% set renovasjon_sensors = [ ("papp_papir"             , "days_to_pickup"   , ""                , 43.7 , 47.8 ,    75  ),
                              ("restavfall"             , "days_to_pickup"   , ""                , 41.8 , 47.8 ,    75  ),
                              ("vatorganisk"            , "days_to_pickup"   , ""                , 39.8 , 47.8 ,    75  )] %}

#                              entity                                                   , category , left ,   top
{% set humidity_sensors = [("1f_house_inside_livingroom_termometer_humidity"            , "room"   , 36.5 ,   93  ),
                           ("1f_house_inside_entrance_termometer_humidity"              , "room"   , 45   ,   59  ),
                           ("2f_house_inside_hall_termometer_humidity"                  , "room"   , 36   ,   56  ),
                           ("1f_house_outside_laundryroom_termometer_humidity"          , "room"   , 28   ,   61.5)] %}

#                              entity                     , category       , left, top
{% set battery_sensors = [("master_bedroom_battery_level" , "room"         , 36.5, 93  ),
                          ("noga_battery_level"           , "room"         , 45  , 59  ),
                          ("ella_battery_level"           , "room"         , 36  , 56  ),
                          ("tomer_battery_level"          , "room"         , 28  , 61.5)] %}

#--------------------------------------------------------------------------------------------------
# Conditional Entities
#  - Will only be displayed if condition "state" active
#--------------------------------------------------------------------------------------------------
{% set conditional_color = "red" %}
#                             entity                                                   , state, left, top, icon     , tap_action
{% set conditional_entities = [("switch.roof_right_table_power_relay"                    , "on", 10 , 67, "power"   , "toggle"),
                               ("binary_sensor.water_boiler_power_pump_controller_status", "on", 8.5, 47, "pump"    , "none"  ),
                               ("switch.main_bathroom_heater"                            , "on", 44 , 66, "radiator", "toggle"),
                               ("switch.master_bathroom_heater"                          , "on", 44 , 83, "radiator", "toggle")] %}

##     ##    ###     ######  ########   #######   ######  
###   ###   ## ##   ##    ## ##     ## ##     ## ##    ## 
#### ####  ##   ##  ##       ##     ## ##     ## ##       
## ### ## ##     ## ##       ########  ##     ##  ######  
##     ## ######### ##       ##   ##   ##     ##       ## 
##     ## ##     ## ##    ## ##    ##  ##     ## ##    ## 
##     ## ##     ##  ######  ##     ##  #######   ######  
# MACROS

{% macro create_schedulers_icons(entity, left, top) -%}
{% if (entity == "hvac_hallway") or (entity == "hvac_livingroom") %}
{% set schedulers = ['1', '2', '3', '4'] %}
{% else %}
{% set schedulers = ['1', '2'] %}
{% endif %}
{% for s in schedulers %}
      - type: conditional
        conditions:
          - entity: input_boolean.{{ entity }}_scheduler_enable{{ s }}
            state: 'on'
        elements:
          - icon: 'mdi:timer-outline'
            style:
              {% if s == '1' %}
              left: {{ left + scheduler_left_offset }}%
              top: {{ top - scheduler_top_offset }}%
              {% elif s == '2' %}
              left: {{ left + scheduler_left_offset }}%
              top: {{ top + scheduler_top_offset }}%
              {% elif s == '3' %}
              left: {{ left - scheduler_left_offset }}%
              top: {{ top - scheduler_top_offset }}%
              {% elif s == '4' %}
              left: {{ left - scheduler_left_offset }}%
              top: {{ top + scheduler_top_offset }}%
              {% endif %}
              transform: translate(-50%, -50%) scale({{ scheduler_scaleX }}, {{ scheduler_scaleY }})
            type: icon
{% endfor %}
{%- endmacro %}

#########################################################
#########################################################
#########################################################

{% macro create_warning_background(entity_problem, entity, left, top) -%}
      - type: conditional
        conditions:
          - entity: sensor.{{ entity_problem }}
            state_not: '0'
        elements:
          - type: state-icon
            entity: {{ entity }}
            style:
              background-color: {{ background_color_alert }}
              border-radius: {{ border_radius }}%
              left: {{ left }}%
              top: {{ top }}%
              transform: translate(-50%, -50%) scale({{ group_scaleX}}, {{ group_scaleY }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
{%- endmacro %}

#########################################################
#########################################################
#########################################################

{% macro create_warning_icon(entity_problem, icon_entity, left, top) -%}
      {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
        {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - type: conditional
        condition: or
        conditions:
          - entity: light.{{ entity }}
            state_not: 'on'
          - entity: light.{{ entity }}
            state_not: 'off'
        elements:
          - type: icon
            icon: mdi:alert-outline
            entity: light.{{ entity }}
            state_color: false
            style:
              color: rgb(226, 190, 57)
              left: {{ left +1 }}%
              top: {{ top +1 }}%
              padding: 2px
              border: 0.1em dotted red
              border-radius: {{ border_radius }}%
            tap_action:
              action: fire-dom-event
              browser_mod:
                {# service: browser_mod.set_theme
                data:
                  theme: auto #}
                service: browser_mod.more_info
                data:
                  entity: light.{{ entity }}
                  large: false
                  

            double_tap_action:
              action: none
            hold_action:
              action: none

            {% endif %}
          {% endfor %}
{%- endmacro %}

#########################################################
#########################################################
#########################################################
# types: DSD     - Day Start Duration
#        DS      - Day Start
#        S_HVAC  - Start HVAC

{% macro create_schedulers_popup(entity, scheduler_type) -%}
              {% if (scheduler_type == "S_HVAC") %}
              {% set num_schedulers = 4 %}
              {% set schedulers = ['1', '2', '3', '4'] %}
              {% else %}
              {% set num_schedulers = 2 %}
              {% set schedulers = ['1', '2'] %}
              {% endif %}
              type: grid
              columns: {{ num_schedulers }}
              square: false
              cards:
                {% for s in schedulers %}
                - type: grid
                  columns: 1
                  square: false
                  title: Schedule {{ s }}
                  cards:
                    {% if (scheduler_type == "DSD") or (scheduler_type == "DS") %}
                    - type: grid
                      columns: 7
                      square: false
                      cards:
                        {% for day, number, name, name_he in days %}
                        - type: button
                          entity: input_boolean.{{ entity }}_day_{{ day }}{{ s }}
                          name: {{ name_he }}
                          icon: mdi:numeric-{{ number }}-box-outline
                          show_name: true
                          show_icon: true
                        {% endfor %}
                    {% endif %}
                    - type: entities
                      # icon: 'mdi:timer-outline'
                      show_header_toggle: false
                      state_color: false
                      # title: Schedule {{ s }}
                      entities:
                        {% if (scheduler_type == "DSD") or (scheduler_type == "DS") %}
                        # - type: section
                        - entity: input_boolean.{{ entity }}_scheduler_enable{{ s }}
                        - type: 'custom:time-picker-card'
                          entity: input_datetime.{{ entity }}_start_time{{ s }}
                          layout:
                            embedded: true
                            name: inside
                            align_controls: right
                          {% endif %}
                        {% if (scheduler_type == "S_HVAC") %}
                        # - type: section
                        - entity: input_boolean.{{ entity }}_scheduler_enable{{ s }}
                        - type: 'custom:simple-thermostat'
                          entity: climate.{{ entity }}_virtual_{{ s }}
                          header: false
                          setpoints:
                          layout:
                            step: row
                            mode:
                              names: false
                              icons: true
                              headings: false
                          decimals: 0
                          step_size: 1
                          hide:
                            state: true
                            temperature: true
                          control:
                            hvac: true
                            fan:
                              "low":
                                icon: mdi:fan-speed-1
                              "mid":
                                icon: mdi:fan-speed-2
                              "high":
                                icon: mdi:fan-speed-3
                        - type: 'custom:time-picker-card'
                          entity: input_datetime.{{ entity }}_start_time{{ s }}
                          layout:
                            embedded: true
                            name: inside
                            align_controls: right
                        {% endif %}
                        {% if scheduler_type == "DSD" %}
                        - type: section
                        - type: 'custom:slider-entity-row'
                          entity: input_number.{{ entity }}_timer_duration{{ s }}
                          hide_state: false
                        {% endif %}
                {% endfor %}
{%- endmacro %}

 ######  ########    ###    ########  ######## 
##    ##    ##      ## ##   ##     ##    ##    
##          ##     ##   ##  ##     ##    ##    
 ######     ##    ##     ## ########     ##    
      ##    ##    ######### ##   ##      ##    
##    ##    ##    ##     ## ##    ##     ##    
 ######     ##    ##     ## ##     ##    ##    
# START

badges: []
icon: 'mdi:rotate-3d-variant'
panel: true
path: floorplan
title: FloorPlan
cards:
  - type: picture-elements
    image: /local/images/floorplan_v2/base_t_night_v2.png
    style: |
      ha-card {
        border-style: none;
        box-shadow: none;
        border: 0px;
        background: transparent;
      }
    elements:

########  ####  ######  ##     ## ##      ##    ###     ######  ##     ## ######## ########  
##     ##  ##  ##    ## ##     ## ##  ##  ##   ## ##   ##    ## ##     ## ##       ##     ## 
##     ##  ##  ##       ##     ## ##  ##  ##  ##   ##  ##       ##     ## ##       ##     ## 
##     ##  ##   ######  ######### ##  ##  ## ##     ##  ######  ######### ######   ########  
##     ##  ##        ## ##     ## ##  ##  ## #########       ## ##     ## ##       ##   ##   
##     ##  ##  ##    ## ##     ## ##  ##  ## ##     ## ##    ## ##     ## ##       ##    ##  
########  ####  ######  ##     ##  ###  ###  ##     ##  ######  ##     ## ######## ##     ## 
# KITCHEN DISHWASER

      {% for entity, group, left, top, scaleX, scaleY, deg in dishwasher %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - entity: {{ entity }}
        state_image:
          'unavailable': /local/images/floorplan_v2/transparent_square.png
          'unknown': /local/images/floorplan_v2/transparent_square.png
          'off': /local/images/floorplan_v2/transparent_square.png
          'on': /local/images/floorplan_v2/dishwasher/{{ entity }}.png
          'Ready': /local/images/floorplan_v2/dishwasher/{{ entity }}.png
          'Run': /local/images/floorplan_v2/dishwasher/{{ entity }}.png
          'Inactive': /local/images/floorplan_v2/dishwasher/{{ entity }}.png
        style:
          left: 50%
          top: 50%
          width: 100%
         # mix-blend-mode: lighten
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        type: image
      {% endif %}
      {% endfor %}

########  ####  ######  ##     ## ######## ######## ########   ######  
##     ##  ##  ##    ## ##     ##    ##    ##       ##     ## ##    ## 
##     ##  ##  ##       ##     ##    ##    ##       ##     ## ##       
########   ##  ##       ##     ##    ##    ######   ########   ######  
##         ##  ##       ##     ##    ##    ##       ##   ##         ## 
##         ##  ##    ## ##     ##    ##    ##       ##    ##  ##    ## 
##        ####  ######   #######     ##    ######## ##     ##  ######  
# PICTURES

      {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}

      ## HACK RGB color kitchen lamp. For some reason the color-lite-card render the base image with minor offset.
      {% if not entity == "smart_led_strip"  %}
      - entity: light.{{ entity }}
        state_image:
          'unavailable': /local/images/floorplan_v2/transparent_square.png
          'unknown': /local/images/floorplan_v2/transparent_square.png
          'off': /local/images/floorplan_v2/transparent_square.png
          'on': /local/images/floorplan_v2/lights/{{ entity }}.png
        style:
          left: 50%
          top: 50%
          width: 100%
          mix-blend-mode: lighten
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        type: image
        {% else %} 
      - type: custom:color-lite-card
        entity: light.{{ entity }}
        image: /local/images/floorplan_v2/lights/{{ entity }}.png
        color_image: /local/images/floorplan_v2/lights/smart_led_strip_red.png
        style:
          left: 50%
          top: 50%
          width: 100%
          mix-blend-mode: lighten
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
          {% endif %}
      {% endif %}
      {% endfor %}

##      ## ########    ###    ######## ##     ## ######## ########  
##  ##  ## ##         ## ##      ##    ##     ## ##       ##     ## 
##  ##  ## ##        ##   ##     ##    ##     ## ##       ##     ## 
##  ##  ## ######   ##     ##    ##    ######### ######   ########  
##  ##  ## ##       #########    ##    ##     ## ##       ##   ##   
##  ##  ## ##       ##     ##    ##    ##     ## ##       ##    ##  
 ###  ###  ######## ##     ##    ##    ##     ## ######## ##     ## 
#WEATHER
    
      - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_weather
            state_not: 'on'
        elements:
          - type: custom:weather-card
            #entity: weather.darksky_daily
            entity: weather.home
            icons: "/local/icons/weather_icons/animated/"
            current: true
            details: true # true false
            number_of_forecasts: 5
            hourly_forecast: false
            style:
              {% if (debug == true) %}
              border: 1px solid red
              {%- endif %}
              left: 22% #-3% 0%
              top: -5%  #-3% 0%
              width: 35%
              transform: 'translate(0%, 0%) scale(0.7, 0.7)'
              {# mix-blend-mode: lighten #}
          {# - type: image
            image: /local/images/floorplan_v2/transparent_square.png
            entity: weather.darksky_hourly
            style:
              {% if (debug == true) %}
              border: 1px solid red
              {%- endif %}
              #border: 1px solid red
              left: 0%
              top: 0%
              width: 27.25%
              height: 35%
              transform: 'translate(0%, 0%) scale(1, 1)'
            tap_action:
              action: fire-dom-event
              browser_mod:
                command: popup
                deviceID:
                  - this
                style: |
                  :host .content {
                    width: 80vw;
                  }
                title: Hourly Weather Forecast
                card:
                  type: 'custom:weather-card'
                  entity: weather.darksky_hourly
                  hourly_forecast: true
                  forecast: true
                  number_of_forecasts: '18'
                  details: false
                  current: false
                  icons: /local/icons/weather_icons/static/
            double_tap_action:
              action: none
            hold_action:
              action: none #}


######## ##    ## ######## ########   ######   ##    ## 
##       ###   ## ##       ##     ## ##    ##   ##  ##  
##       ####  ## ##       ##     ## ##          ####   
######   ## ## ## ######   ########  ##   ####    ##    
##       ##  #### ##       ##   ##   ##    ##     ##    
##       ##   ### ##       ##    ##  ##    ##     ##    
######## ##    ## ######## ##     ##  ######      ##  


      - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_energy_price
            state_not: 'on'
        elements:
          - type: custom:apexcharts-card
            header:
              show: true
              title: Strømpris neste 48 timer
              show_states: true
            graph_span: 2d
            style:
              {% if (debug == true) %}
              border: 1px solid red
              {%- endif %}
              left: 1% #-3% 0%
              top: 0%  #-3% 0%
              {# width: 23% #}
            
              width: 23.7%
              transform: 'translate(0%, 0%) scale(1, 1)'
              {# mix-blend-mode: lighten #}
            now:
              show: true
              color: "#ff0000"
              label: Now
            span:
              start: day
            series:
              - entity: sensor.nordpool_kwh_krsand_nok_3_095_0
                name: Today
                unit: Kr
                color: yellow
                data_generator: >
                  let thisdate = new Date(); thisdate.setHours(24,0,0,0);

                  const today = [...entity.attributes.raw_today,
                  {start:thisdate.toISOString()}]; return today.map((entry,idx) => {
                    if(idx > 23) return [new Date(entry.start), null];
                    return [new Date(entry.start), entry.value];
                  });
                type: column
                group_by:
                  func: max
                  duration: 60min
                show:
                  legend_value: false
                  in_header: false
                  extremas: true
              - entity: sensor.nordpool_kwh_krsand_nok_3_095_0
                name: Tomorrow
                unit: Kr
                data_generator: |
                  return entity.attributes.raw_tomorrow.map((entry) => {
                    return [new Date(entry.start), entry.value * 1.25];
                  });
                type: column
                group_by:
                  func: max
                  duration: 60min
                show:
                  legend_value: false
                  in_header: false
                  extremas: true

      # ------------------------------
      # Define Energy active areas
      # ------------------------------

      - entity: sensor.kamstrup_active_power_import
        image: /local/images/floorplan_v2/transparent_square.png
        style:
          {% if (debug == true) %}
          border: 1px solid red
          opacity: 1
          {%- else %}
          opacity: 0
          {%- endif %}
          left: 25%
          top: 76%
          transform: rotate({{ 0 }}deg) scale({{ 8.0 }}, {{ 1.2 }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: Strømoversikt
                show_header_toggle: false
                type: grid
                card_mod:
                style: |
                  :host .content {
                    width: 75vw;
                    height: 75;
                  }
                cards:
                  - type: vertical-stack
                    cards:
                      - entities:
                          - entity: sensor.kwh_min
                            name: Min kWh
                          # - entity: sensor.kwh_max
                          #   name: Snitt
                          - entity: sensor.kwh_max
                            name: Max kWh
                          - type: divider
                          - entity: sensor.daily_prize_accumulated_with_fees
                            name: Kostnad i dag inkl nettleie
                            icon: mdi:currency-usd
                          - entity: sensor.daily_prize_accumulated_with_compensation
                            name: Kostnad idag med kompensasjon
                            icon: mdi:currency-usd
                          - entity: sensor.cost_lastday
                            name: Kostnad i går
                            icon: mdi:currency-usd
                          - type: divider
                          - entity: sensor.energy_compensation_daily
                            name: Kompensasjon i dag
                            icon: mdi:currency-usd
                          - entity: sensor.energy_compensation_this_month
                            name: Kompensasjon denne måneden
                            icon: mdi:currency-usd
                          - type: divider
                          - entity: sensor.cost_lastday
                            name: Kostnad i går
                            icon: mdi:currency-usd                  
                          - entity: sensor.monthly_prize_accumulated_with_fees
                            name: Kostnad denne mnd
                            icon: mdi:currency-usd
                          - entity: sensor.monthly_prize_accumulated_with_compensation
                            name: Kostnad denne mnd med kompensasjon
                            icon: mdi:currency-usd
                          - entity: sensor.cost_last_month
                            name: Kostnad forrige mnd
                            icon: mdi:currency-usd
                          - entity: sensor.yearly_prize_accumulated_with_fees
                            name: Kostnad i år
                            icon: mdi:currency-usd
                          - entity: sensor.cost_lastyear
                            icon: mdi:currency-usd
                            name: Kostand i fjor
                          - type: divider
                          - entity: sensor.kwh_consumption_today
                            name: Forbruk i dag
                            icon: mdi:fire
                          - entity: sensor.kwh_consumption_lastday
                            name: Forbruk i går
                            icon: mdi:fire
                          - entity: sensor.kwh_consumption_thismonth
                            name: Forbruk denne mnd
                            icon: mdi:fire
                          - entity: sensor.kwh_consumption_lastmonth
                            name: Forbruk forrige mnd
                            icon: mdi:fire
                          - entity: sensor.kwh_consumption_thisyear
                            name: Forbruk i år
                            icon: mdi:fire
                          - type: divider
                          - entity: sensor.time_of_max_hour_consumption_eigeland_50
                            name: Max strømtrekk dato
                          - entity: sensor.monthly_peak_hour_consumption_eigeland_50
                            name: Måndlig Strøm Peak ( Pr. Time )
                          - entity: sensor.monthly_power_peak_prize
                            name: Fastledd denne mnd
                          - entity: sensor.kwh_consumption_total
                            name: Målerstand
                            secondary_info: last-changed
                            icon: mdi:counter
                        type: entities
                        show_header_toggle: true
                        state_color: false
                columns: 1
                square: false
            columns: 1
            square: false
            deviceID:
              - this
        double_tap_action:
          action: none
        hold_action:
          action: none 
        type: image
        # Voltage
      - type: state-label
        entity: sensor.kamstrup_voltage_l1
        style:
          left: 25%
          top: 76.2%
          transform: translate(0, -50%)
          font-size: 80%
      - type: state-label
        entity: sensor.kamstrup_voltage_l2
        style:
          left: 25%
          top: 78.3%
          transform: translate(0, -50%)
          font-size: 80%
      - type: state-label
        entity: sensor.kamstrup_voltage_l3
        style:
          left: 25%
          top: 80.3%
          transform: translate(0, -50%)
          font-size: 80%   
      # KWH    
      - type: state-label
        entity: sensor.kwh_active_usage
        style:
          left: 24.5%
          top: 82.6%
          transform: translate(0, -50%)
          font-size: 85%    
 ######     ###    ##       ######## ##    ## ########  ######## ########  
##    ##   ## ##   ##       ##       ###   ## ##     ## ##       ##     ## 
##        ##   ##  ##       ##       ####  ## ##     ## ##       ##     ## 
##       ##     ## ##       ######   ## ## ## ##     ## ######   ########  
##       ######### ##       ##       ##  #### ##     ## ##       ##   ##   
##    ## ##     ## ##       ##       ##   ### ##     ## ##       ##    ##  
 ######  ##     ## ######## ######## ##    ## ########  ######## ##     ## 
#CALENDAR

      - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_calendar
            state_not: 'on'
        elements:
          - type: 'custom:atomic-calendar-revive'
            entities:
              - entity: calendar.family
                name: calendar.family
                blocklist: "Vilde og Sturla"

              - entity: calendar.cbegelan_gmail_com
                name: calendar.cbegelan_gmail_com
                blocklist: "Adrian"
            compactMode: false
            maxDaysToShow: 2
            maxEventCount: 4
            showLocation: true
            showPrivate: false
            showMonth: true
            showWeekDay: true
            showDate: false
            hideDeclined: true
            hideFinishedEvents: true
            hoursOnSameLine: true
            showDescription: false
            showNoEventsForToday: false
            disableEventLink: true
            disableLocationLink: true
            defaultMode: Event
            refreshInterval: 60
            showHours: true
            showRelativeTime: true
            europeanDate: false
            dateFormat: 'LL'
            hoursFormat: 'HH:mm'
            style:
              left: 55%
              top: -1%
              width: 20%
              transform: 'translate(0%, 0%) scale(1, 0.96)'

##       ####  ######   ##     ## ########  ######  
##        ##  ##    ##  ##     ##    ##    ##    ## 
##        ##  ##        ##     ##    ##    ##       
##        ##  ##   #### #########    ##     ######  
##        ##  ##    ##  ##     ##    ##          ## 
##        ##  ##    ##  ##     ##    ##    ##    ## 
######## ####  ######   ##     ##    ##     ######  
# LIGHTS

      # ------------------------------
      # Define LIGHTS active areas
      # ------------------------------

      {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - entity: light.{{ entity }}
        image: /local/images/floorplan_v2/transparent_square.png
        style:
          {% if (debug == true) %}
          border: 1px solid red
          opacity: 1
          {%- else %}
          opacity: 0
          {%- endif %}
          left: {{ left }}%
          top: {{ top }}%
          width: 3%
          transform: rotate({{ deg }}deg) scale({{ scaleX }}, {{ scaleY }})
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
        hold_action:
          action: more-info
        type: image
      {%- endif %}
      {% endfor %}

##     ## ######## ########  ####    ###    
###   ### ##       ##     ##  ##    ## ##   
#### #### ##       ##     ##  ##   ##   ##  
## ### ## ######   ##     ##  ##  ##     ## 
##     ## ##       ##     ##  ##  ######### 
##     ## ##       ##     ##  ##  ##     ## 
##     ## ######## ########  #### ##     ## 
# TV animation Media
      {% for entity, group, left, top, scaleX, scaleY, deg in media %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - entity: media_player.{{ entity }}
        state_image:
          'unavailable': /local/images/floorplan_v2/transparent_square.png
          'off': /local/images/floorplan_v2/transparent_square.png
          'on': /local/images/floorplan_v2/lights/{{ entity }}.gif
        style:
          left: {{ left }}%
          top: {{ top }}%
          width: 3%
          opacity: 1
          {% if (debug == true) %}
          border: 1px solid red
          {%- endif %}
        hold_action:
          action: none
        double_tap_action:
          action: none
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: {{ group.capitalize() }} Media
                show_header_toggle: false
                type: entities
                entities:
                  {% for entity, group, left, top, scaleX, scaleY, deg in media %}
                  {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
                    - media_player.{{ entity }}
                  {% endif %}
                  {% endfor %}
            deviceID:
              - this
        type: image
      {% endif %}
      {% endfor %}
      
      # ------------------------------
      # Define MEDIA active border areas
      # ------------------------------
      {% for entity, group, left, top, scaleX, scaleY, deg in media %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - entity: media_player.{{ entity }}
        image: /local/images/floorplan_v2/transparent_square.png
        style: 
          {% if (debug == true) %}
          border: 1px solid red
          opacity: 1
          {% else %}
          opacity: 0
          {%- endif %}
          left: {{ left }}%
          top: {{ top }}%
          transform: rotate({{ deg }}deg) scale({{ scaleX }}, {{ scaleY }})
          
        tap_action:
          action: more-info
        double_tap_action:
          action: more-info
        hold_action:
          action: more-info
        type: image
      {%- endif %}
      {% endfor %}
      # ---------------------------
      # ---------------------------
      # Define Light Group Controls
      # ---------------------------
      # ---------------------------

      {% for entity_group, left, top in light_groups %}

      {{ create_warning_background(entity_group ~ "_lights_problem", "light." ~ entity_group ~ "_lights", left, top) }}
      {{ create_warning_icon(entity_group ~ "_lights_problem", "light." ~ entity_group ~ "_lights", left, top) }}

      - entity: light.{{ entity_group }}_lights
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: {{ left }}%
          top: {{ top }}%
          transform: translate(-50%, -50%) scale({{ group_scaleX}}, {{ group_scaleY }})
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
        hold_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: {{ entity_group.capitalize() }} Lights
                show_header_toggle: false
                type: entities
                entities:
                  {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
                  {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) and (entity_group == group) %}
                    - light.{{ entity }}
                  {% endif %}
                  {% endfor %}
            deviceID:
              - this
        type: state-icon
      {% endfor %}



 ######     ###    ##     ## ######## ########     ###    
##    ##   ## ##   ###   ### ##       ##     ##   ## ##   
##        ##   ##  #### #### ##       ##     ##  ##   ##  
##       ##     ## ## ### ## ######   ########  ##     ## 
##       ######### ##     ## ##       ##   ##   ######### 
##    ## ##     ## ##     ## ##       ##    ##  ##     ## 
 ######  ##     ## ##     ## ######## ##     ## ##     ## 

# CAMERA
      {% for entity, ptz_script, group, left, top, scaleX, scaleY, deg in cameras %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - type: image
        entity: camera.{{ entity }}
        state_image:
          'unavailable': /local/images/floorplan_v2/transparent_square.png
          'off': /local/images/floorplan_v2/transparent_square.png
          'recording': /local/images/floorplan_v2/camera/{{ entity }}.png
        style:
          left: {{ left }}%
          top: {{ top }}%
          width: 50px
          opacity: 0.4
          z-index: 1
        hold_action:
          action: none
        double_tap_action:
          action: none
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: Kamera {{ entity }}
                show_header_toggle: false
                type: grid
                columns: 1
                square: false
                card_mod:
                style: |
                  :host .content {
                    width: 75vw;
                    height: 75;
                  }
                cards:
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: custom:frigate-card
                        camera_entity: camera.{{ entity }}
                        style:
                          left: 10%
                          top: 82%
                          height: 6.5%
                        media_gallery:
                          controls:
                            thumbnails:
                              size: 75
                        media_viewer:
                          auto_play: all
                        view_layout:
                          grid-area: main
                        dimensions:
                          aspect_ratio_mode: dynamic
                        timeline:
                          show_recordings: true
                        view:
                          update_force: false
                          actions: 
                            media_viewer: snapshot
                            event_gallery: snapshot

                          scan:
                            enabled: true
                        frigate:
                          camera_name: "{{ entity }}"
                        cameras:
                          - camera_entity: camera.{{ entity }}
                            live_provider: auto
                        elements:
                        - type: custom:frigate-card-conditional
                          conditions:
                            mediaLoaded: true
                            view:
                              - live
                              - image
                          elements:
                          - type: custom:frigate-card-ptz
                            orientation: horizontal
                            style:
                              transform: none
                              right: 20px
                              top: 180px
                            service: "{{ ptz_script }}"
                            data_left:
                              direction: LEFT
                            data_right:
                              direction: RIGHT
                            data_up:
                              direction: UP
                            data_down:
                              direction: DOWN

                          - type: custom:frigate-card-menu-submenu
                            icon: mdi:menu
                            items:
                              - title: Vei inn
                                icon: mdi:lightbulb
                                tap_action:
                                  action: call-service
                                  service: script.camera_preset
                                  service_data:
                                    position: 1
                              - title: Tuna
                                icon: mdi:lightbulb
                                tap_action:
                                  action: call-service
                                  service: script.camera_preset
                                  service_data:
                                    position: 3
                              - title: Ned
                                icon: mdi:lightbulb
                                tap_action:
                                  action: call-service
                                  service: script.camera_preset
                                  service_data:
                                    position: 8
                                    
            deviceID:
              - this

      - type: conditional
        conditions:
          - entity: camera.{{ entity }}
            state: "recording"
        elements:
          - type: state-icon
            entity: camera.{{ entity }}
            icon: mdi:radiobox-marked
            state_color: false
            style:
              --mdc-icon-size: 15px
              --paper-item-icon-color: red
              left: {{ left - 0.55 }}%
              top: {{ top - 1 }}%

#animation: blink 2s ease infinite
            
      {% endif %}
      {% endfor %}
########  ######## ##    ##  #######  ##     ##    ###     ######        ##  #######  ##    ## 
##     ## ##       ###   ## ##     ## ##     ##   ## ##   ##    ##       ## ##     ## ###   ## 
##     ## ##       ####  ## ##     ## ##     ##  ##   ##  ##             ## ##     ## ####  ## 
########  ######   ## ## ## ##     ## ##     ## ##     ##  ######        ## ##     ## ## ## ## 
##   ##   ##       ##  #### ##     ##  ##   ##  #########       ## ##    ## ##     ## ##  #### 
##    ##  ##       ##   ### ##     ##   ## ##   ##     ## ##    ## ##    ## ##     ## ##   ### 
##     ## ######## ##    ##  #######     ###    ##     ##  ######   ######   #######  ##    ## 


# TEMPERATURE SENSORS

      {% for entity, attribute, name, left, top, font_size in renovasjon_sensors %}
      - type: state-label
        entity: sensor.{{ entity }}
        attribute: {{ attribute }}
        prefix: "{{ name }} "
        #suffix: " dager"
        style:
          left: {{ left }}%
          top: {{ top }}%
          transform: translate(0, -50%)
          font-size: {{ font_size }}%
      {% endfor %}

        double_tap_action:
          action: none
        hold_action:
          action: none

######## ######## ##     ## ########  ######## ########     ###    ######## ##     ## ########  ########     ######  ######## ##    ##  ######   #######  ########   ######  
   ##    ##       ###   ### ##     ## ##       ##     ##   ## ##      ##    ##     ## ##     ## ##          ##    ## ##       ###   ## ##    ## ##     ## ##     ## ##    ## 
   ##    ##       #### #### ##     ## ##       ##     ##  ##   ##     ##    ##     ## ##     ## ##          ##       ##       ####  ## ##       ##     ## ##     ## ##       
   ##    ######   ## ### ## ########  ######   ########  ##     ##    ##    ##     ## ########  ######       ######  ######   ## ## ##  ######  ##     ## ########   ######  
   ##    ##       ##     ## ##        ##       ##   ##   #########    ##    ##     ## ##   ##   ##                ## ##       ##  ####       ## ##     ## ##   ##         ## 
   ##    ##       ##     ## ##        ##       ##    ##  ##     ##    ##    ##     ## ##    ##  ##          ##    ## ##       ##   ### ##    ## ##     ## ##    ##  ##    ## 
   ##    ######## ##     ## ##        ######## ##     ## ##     ##    ##     #######  ##     ## ########     ######  ######## ##    ##  ######   #######  ##     ##  ######  
# TEMPERATURE SENSORS

      {% for entity, category, left, top, font_size in temperature_sensors %}
      - type: conditional
        conditions:
          {% if category == "room" %}
          - entity: input_boolean.ui_hide_room_temperatures
          {% endif %}

            state_not: 'on'
        elements:
        - type: state-label
          entity: sensor.{{ entity }}
          style:
            left: {{ left }}%
            top: {{ top }}%
            transform: translate(0, -50%)
            font-size: {{ font_size }}%
      {% endfor %}

      - type: state-icon
        entity: input_boolean.ui_hide_room_temperatures
        icon: mdi:thermometer
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: 57%
          top: 38%
          transform: translate(-50%, -50%) scale({{ group_scaleX }}, {{ group_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: Temperature & Humidity Sensors
                show_header_toggle: false
                type: grid
                columns: 1
                square: false
                card_mod:
                style: |
                  :host .content {
                    width: 75vw;
                    height: 75;
                  }
                cards:
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: grid
                        columns: 1
                        square: false
                        cards:
                          - type: 'custom:slider-entity-row'
                            entity: input_number.ui_temperature_graph_hours
                            hide_state: false
                            style: |
                              width: 75vw
                      - type: 'custom:config-template-card'
                        variables:
                          HOURS: states['input_number.ui_temperature_graph_hours'].state
                        entities:
                          - input_number.ui_temperature_graph_hours
                        card:
                          type: history-graph
                          entities:
                            {% for entity, category, left, top, font_size in temperature_sensors %}
                            {% if category == "room" %}
                            - entity: sensor.{{ entity }}
                            {% endif %}
                            {% endfor %}
                            {% for entity, category, left, top in humidity_sensors %}
                            {% if category == "room" %}
                            - entity: sensor.{{ entity }}
                            {% endif %}
                            {% endfor %}
                          hours_to_show: "${ HOURS }"
                          refresh_interval: 0
                deviceID:
                  - this
        double_tap_action:
          action: none
        hold_action:
          action: none

 ######     ###    ########      ######  ##     ##    ###    ########   ######   ######## ########  
##    ##   ## ##   ##     ##    ##    ## ##     ##   ## ##   ##     ## ##    ##  ##       ##     ## 
##        ##   ##  ##     ##    ##       ##     ##  ##   ##  ##     ## ##        ##       ##     ## 
##       ##     ## ########     ##       ######### ##     ## ########  ##   #### ######   ########  
##       ######### ##   ##      ##       ##     ## ######### ##   ##   ##    ##  ##       ##   ##   
##    ## ##     ## ##    ##     ##    ## ##     ## ##     ## ##    ##  ##    ##  ##       ##    ##  
 ######  ##     ## ##     ##     ######  ##     ## ##     ## ##     ##  ######   ######## ##     ## 

      {% for entity, category, name, left, top, font_size in car_chargers %}
      - type: conditional
        conditions:
          - entity: binary_sensor.{{ entity }}
            state_not: 'Disconnected'
        elements:
        - type: state-label
          entity: binary_sensor.{{ entity }}
          attribute: operating_mode
          style:
            left: {{ left }}%
            top: {{ top }}%
            transform: translate(0, -50%)
            font-size: {{ font_size }}%
        - type: state-label
          entity: binary_sensor.{{ entity }}
          attribute: total_charge_power
          suffix: " kWh"
          style:
            left: {{ left+0.0 }}%
            top: {{ top+1.3 }}%
            transform: translate(0, -50%)
            font-size: {{ font_size }}%
      - type: conditional
        conditions:
          - entity: binary_sensor.{{ entity }}
            state: "charging"
        elements:
          - type: state-icon
            entity: sensor.{{ entity }}
            icon: mdi:flash
            state_color: false
            style:
              --mdc-icon-size: 20px
              --paper-item-icon-color: rgb(255, 204, 102)
              color: green
              left: {{ left + 6 }}%
              top: {{ top +0.5 }}%
      {% endfor %}



##     ## ##     ##    ###     ######  
##     ## ##     ##   ## ##   ##    ## 
##     ## ##     ##  ##   ##  ##       
######### ##     ## ##     ## ##       
##     ##  ##   ##  ######### ##       
##     ##   ## ##   ##     ## ##    ## 
##     ##    ###    ##     ##  ######  
# HVAC

      # --------------------------------------------
      # --------------------------------------------
      # Define HVAC Controls & Start_Stop Schedulers
      # --------------------------------------------
      # --------------------------------------------

      {% for entity, left, top in hvacs %}

      - type: state-icon
        entity: climate.{{ entity }}
        icon: 'mdi:air-conditioner'
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: {{ left }}%
          top: {{ top }}%
          transform: translate(-50%, -50%) scale({{ group_scaleX }}, {{ group_scaleX }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            deviceID:
              - this
            service: browser_mod.popup
            data:
              content:
                title: {{ entity.capitalize() }} Air Conditioning
                show_header_toggle: false
                type: grid
                {% set num_settings_columns = 1 %}
                columns: {{ num_settings_columns }}
                square: false
                cards:
                  - type: thermostat
                    show_header_toggle: false
                    {# type: custom:simple-thermostat #}
                    entity: climate.{{ entity }}
                    header: false
                    setpoints:
                    layout:
                      step: row
                      mode:
                        names: false
                        icons: true
                        headings: false
                    decimals: 0
                    step_size: 1
                    hide:
                      state: true
                      temperature: true
                    control:
                      hvac: true
                      fan:
                        "low":
                          icon: mdi:fan-speed-1
                        "mid":
                          icon: mdi:fan-speed-2
                        "high":
                          icon: mdi:fan-speed-3
                  {# - type: markdown
                    content: Set Auto Temperature control #}
                  - type: custom:button-card
                    show_name: true
                    show_icon: true
                    tap_action:
                      action: toggle
                    entity: input_boolean.ventilation_auto
                    name: Set Auto Temperature control
                    show_state: true
                    size: 50px
                    icon: |-
                      [[[ if (entity.state == "on") return "mdi:toggle-switch";
                          if (entity.state == "off") return "mdi:toggle-switch-off" ]]]
                  - type: custom:button-card
                    show_name: true
                    show_icon: true
                    tap_action:
                      action: toggle
                    entity: input_boolean.dryer
                    name: Set Dryer Mode
                    show_state: true
                    size: 50px
                    icon: |-
                      [[[ if (entity.state == "on") return "mdi:toggle-switch";
                          if (entity.state == "off") return "mdi:toggle-switch-off" ]]]

            double_tap_action:
              action: more-info
            hold_action:
              action: none
              {# action: fire-dom-event
              browser_mod:
                command: popup
                deviceID:
                  - this
                style: |
                  :host .content {
                    height: 55vh;
                    width: 85vw;
                  }
                title: {{ entity.capitalize() }} Air Conditioning
                card:
                  {{ create_schedulers_popup("hvac_" ~ entity, "S_HVAC") }} #}

      # Show temperature
      {# - type: state-label
        entity: sensor.{{ entity ~ '_temperature' }}
        style:
          left: {{ left + 1.3 }}%
          top: {{ top - 1 }}%
          transform: 'translate(0, -50%)' #}

      # Show airconditioner state (if ON)
      - type: conditional
        conditions:
          - entity: climate.{{ entity }}
            state_not: 'off'
        elements:
          - type: state-label
            entity: climate.{{ entity }}
            style:
              left: {{ left + 2 }}%
              top: {{ top + 2.5 }}%
              transform: 'translate(0, -50%)'
          - type: state-label
            entity: climate.{{ entity }}
            attribute: "fan_mode"
            style:
              left: {{ left + 5 }}%
              top: {{ top + 2.5 }}%
              transform: 'translate(0, -50%)'
          - type: state-label
            entity: climate.{{ entity }}
            attribute: "temperature"
            style:
              left: {{ left + 8 }}%
              top: {{ top + 2.5 }}%
              transform: 'translate(0, -50%)'

      {{ create_schedulers_icons("hvac_" ~ entity, left, top) }}
      {% endfor %}

######## ########  ####  ######      ###   ######## ########
##       ##     ##  ##  ##    ##    ## ##     ##    ##       
##       ##     ##  ##  ##         ##   ##    ##    ## 
######   ########   ##  ##   #### ##     ##   ##    ######  
##       ##   ##    ##  ##    ##  #########   ##    ##       
##       ##    ##   ##  ##    ##  ##     ##   ##    ##       
##       ##     ## ####  ######   ##     ##   ##    ########
# FRIGATE

      - type: custom:frigate-card
        camera_entity: camera.eigeland
        style:
          left: 36%
          top: 16%
          width: 19%
          height: 33%
        media_gallery:
          controls:
            thumbnails:
              size: 150
        view_layout:
          grid-area: main
        view:
          default: clips
          camera_select: clips
          update_seconds: 120
          timeout_seconds: 120
          update_force: false
          actions: 
            media_viewer: snapshot
            event_gallery: snapshot
          scan:
            enabled: true
          dark_mode: "on"
        frigate:
          camera_name: eigeland
        menu:
          style: none
          button_size: 20
        cameras:
          - camera_entity: camera.eigeland
            live_provider: auto
        live:
          controls:
            thumbnails:
              thumbnails:
              mode: below
              media: clips
              show_timeline_control: false
              show_download_control: false
              show_favorite_control: false


########  ######## ########   ######   #######  ##    ##  ######  
##     ## ##       ##     ## ##    ## ##     ## ###   ## ##    ## 
##     ## ##       ##     ## ##       ##     ## ####  ## ##       
########  ######   ########   ######  ##     ## ## ## ##  ######  
##        ##       ##   ##         ## ##     ## ##  ####       ## 
##        ##       ##    ##  ##    ## ##     ## ##   ### ##    ## 
##        ######## ##     ##  ######   #######  ##    ##  ###### 
#########################    People at home    #########################

      {% for entity, battery_level, charging, left, top in persons %}
      - action: none
        entity: "person.{{ entity }}"
        state_image:
          home: "local/images/floorplan_v2/people/{{ entity }}_home.png"
          not_home: "local/images/floorplan_v2/people/{{ entity }}_away.png"
        style:
          background-color: "rgba(255, 255, 255, 0.0)"
          border-radius: 10vw
          height: 3.5vw
          left: {{ left }}%
          top: {{ top }}%
          width: 3.5vw
        tap_action:
          action: more-info
        type: image


      - type: state-label
        entity: "sensor.{{ battery_level }}"
        style:
          left: {{ left + 0.2 }}%
          top: {{ top + 5 }}%

      - type: conditional
        conditions:
          - entity: "sensor.{{ charging }}"
            state_not: "discharging"
        elements:
          - type: state-icon
            entity: "sensor.{{ charging }}"
            icon: mdi:flash
            state_color: false
            style:
              --mdc-icon-size: 15px
              --paper-item-icon-color: rgb(255, 204, 102)
              color: green
              left: {{ left - 1.4 }}%
              top: {{ top + 5 }}%
      {% endfor %}
##    ##    ###    ##     ## ####  ######      ###    ######## ####  #######  ##    ## 
###   ##   ## ##   ##     ##  ##  ##    ##    ## ##      ##     ##  ##     ## ###   ## 
####  ##  ##   ##  ##     ##  ##  ##         ##   ##     ##     ##  ##     ## ####  ## 
## ## ## ##     ## ##     ##  ##  ##   #### ##     ##    ##     ##  ##     ## ## ## ## 
##  #### #########  ##   ##   ##  ##    ##  #########    ##     ##  ##     ## ##  #### 
##   ### ##     ##   ## ##    ##  ##    ##  ##     ##    ##     ##  ##     ## ##   ### 
##    ## ##     ##    ###    ####  ######   ##     ##    ##    ####  #######  ##    ## 
# NAVIGATION

# Navigation images/logod should be 300x300 with transparent background

      {# - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_navigation
            state_not: 'on'
        elements:
          {% for entity in navigations %}
          - type: image
            image: /local/images/floorplan_v2/navigation/{{ entity }}.png
            style:
              left: {{ navi_left }}%
              top: {{ navi_top.value }}%
              transform: translate(-50%, -50%) scale({{ navi_scaleX }}, {{ navi_scaleY }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none

          - type: state-label
            entity: sensor.{{ entity }}
            attribute: route
            style:
              left: {{ navi_left - navi_left_offset}}%
              top: {{ navi_top.value }}%
              transform: translate(-100%, -50%) scale({{ navi_scaleX * navi_scaleT }}, {{ navi_scaleY * navi_scaleT }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none

          - type: state-label
            entity: sensor.{{ entity }}_ui
            style:
              left: {{ navi_left + navi_left_offset }}%
              top: {{ navi_top.value }}%
              transform: translate(0%, -50%) scale({{ navi_scaleX * navi_scaleT }}, {{ navi_scaleY * navi_scaleT }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
          {% set navi_top.value = navi_top.value - navi_top_offset %}
          {% endfor %} #}

 ######  ########    ###    ######## ##     ##  ######        ########     ###    ########  
##    ##    ##      ## ##      ##    ##     ## ##    ##       ##     ##   ## ##   ##     ## 
##          ##     ##   ##     ##    ##     ## ##             ##     ##  ##   ##  ##     ## 
 ######     ##    ##     ##    ##    ##     ##  ######        ########  ##     ## ########  
      ##    ##    #########    ##    ##     ##       ##       ##     ## ######### ##   ##   
##    ##    ##    ##     ##    ##    ##     ## ##    ##       ##     ## ##     ## ##    ##  
 ######     ##    ##     ##    ##     #######   ######        ########  ##     ## ##     ## 
# STATUS BAR

      {% for number, entity, state_t_f, state, icon, card_type in statusbar_entities %}
      - type: conditional
        conditions:
          - entity: {{ entity }}
            {% if state_t_f == "t" %}
            state: "{{ state }}"
            {% else %}
            state_not: "{{ state }}"
            {% endif %}
        elements:
          - type: icon
            icon: {{ icon }}
            entity: {{ entity }}
            tap_action:
            {% if (card_type == "more-info") %}
              action: more-info
            {% else %}
              action: fire-dom-event
              browser_mod:
                command: popup
                deviceID:
                  - this
                style: |
                  :host .content {
                    width: 40vw;
                    height: 50vh;
                  }
                title: Details
                card:
                {% if (card_type == "entities") %}
                  type: entities
                  show_header_toggle: false
                  entities:
                  {% for number2, entity2 in statusbar_details %}
                  {% if number2 == number %}
                    - entity: {{ entity2 }}
                  {% endif %}
                  {% endfor %}
                {% elif (card_type == "history-graph") %}
                  type: history-graph
                  entities:
                  {% for number2, entity2 in statusbar_details %}
                  {% if number2 == number %}
                    - entity: {{ entity2 }}
                  {% endif %}
                  {% endfor %}
                {% elif (card_type == "ha_updates") %}
                  type: markdown
                  entity_id: {{ entity }}
                  {% raw %}
                  content: |
                    # Home Assistant updates:
                    {% if states('group.updates') == "on" %}
                      {% for updates in state_attr('group.updates', 'entity_id') %}
                        {% if states(updates) == "on" %}
                      - <img src="{{ state_attr(updates, 'entity_picture') }}" alt="-" width="15"/> **{{ state_attr(updates, 'title') }}** _{{ state_attr(updates, 'installed_version') }}_ -> _{{ state_attr(updates, 'latest_version') }}_
                        {% endif %}
                      {% endfor %}
                    {% else %}
                      - No updates
                    {% endif %}
                    ---
                    # HACS updates:
                    {% if states('sensor.hacs') != "0" %}
                      {% for repo in state_attr('sensor.hacs', 'repositories') %}
                      - **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
                      {% endfor %}
                    {% else %}
                      - No updates
                    {% endif %}
                  {% endraw %}
                {% else %}
                  type: markdown
                  content: "**Card type not defined**"
                {% endif %}
              {% endif %}
            style:
              color: {{ statusbar_color }}
              left: {{ statusbar_left.value }}%
              top: {{ statusbar_top }}%
              transform: translate(0%, 0%) scale({{ statusbar_scaleX }}, {{ statusbar_scaleY }})
            {% set statusbar_left.value = statusbar_left.value + statusbar_left_offset %}
      {% endfor %}

 ######  ######## ######## ######## #### ##    ##  ######    ######  
##    ## ##          ##       ##     ##  ###   ## ##    ##  ##    ## 
##       ##          ##       ##     ##  ####  ## ##        ##       
 ######  ######      ##       ##     ##  ## ## ## ##   ####  ######  
      ## ##          ##       ##     ##  ##  #### ##    ##        ## 
##    ## ##          ##       ##     ##  ##   ### ##    ##  ##    ## 
 ######  ########    ##       ##    #### ##    ##  ######    ######  
# SETTINGS

      - type: icon
        icon: mdi:cog
        style:
          color: {{ settings_color }}
          left: {{ settings_left }}%
          top: {{ settings_top }}%
          transform: translate(0%, 0%) scale({{ settings_scaleX }}, {{ settings_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: Settings
                show_header_toggle: false
                type: grid
                style:
                  width: 100%
                  height: 100%
                {% set num_settings_columns = 2 %}
                columns: {{ num_settings_columns }}
                square: false
                cards:
                  {% for current_column in ['1', '2'] %}
                  - type: entities
                    show_header_toggle: false
                    {# title: 
                      {% if current_column == '2' %}
                        Hide Elements
                      {% elif current_column == '1' %}
                        System
                      {% endif %} #}
                    entities:
                      {% for entity, column, section, label, type in settings_entities %}
                        {% if column == current_column %}
                          {% if section == "y" %}
                      - type: section
                        label: {{ label }}
                          {% endif %}
                          {%if type == "slider" %}
                      - type: 'custom:slider-entity-row'
                        entity: {{ entity }}
                        hide_state: true
                          {# {% elif type == "gauge" %}
                      - type: 'custom:gauge-card'
                        entity: {{ entity }}         #}
                          {% else %}
                      - entity: {{ entity }}
                          {% endif %}
                        {% endif %}
                      {% endfor %}
                      - type: section
                  {% endfor %} #}
      

########     ###    ######## ######## ######## #### ##     ## ######## 
##     ##   ## ##      ##    ##          ##     ##  ###   ### ##       
##     ##  ##   ##     ##    ##          ##     ##  #### #### ##       
##     ## ##     ##    ##    ######      ##     ##  ## ### ## ######   
##     ## #########    ##    ##          ##     ##  ##     ## ##       
##     ## ##     ##    ##    ##          ##     ##  ##     ## ##       
########  ##     ##    ##    ########    ##    #### ##     ## ######## 

      - entity: sensor.time
        hold_action:
          action: none
        style:
          color: "rgba(255, 255, 255, 0.7)"
          font-size: 3.41vw
          font-weight: 200
          left: 2.7%
          letter-spacing: "-0.05vw"
          max-width: 1px
          top: 90%
        tap_action:
          action: none
        type: state-label
      - entity: sensor.datetime_string
        hold_action:
          action: none
        style:
          color: "rgba(255, 255, 255, 0.3)"
          font-size: 1.3vw
          font-weight: 300
          left: 18%
          letter-spacing: "-0.05vw"
          text-align: left
          top: 96%
          width: 30%
        tap_action:
          action: none
        type: state-label
        double_tap_action:
          action: none

##     ## ##    ## ########     ###    #### ########  
##     ## ###   ## ##     ##   ## ##    ##  ##     ## 
##     ## ####  ## ##     ##  ##   ##   ##  ##     ## 
##     ## ## ## ## ########  ##     ##  ##  ##     ## 
##     ## ##  #### ##   ##   #########  ##  ##     ## 
##     ## ##   ### ##    ##  ##     ##  ##  ##     ## 
 #######  ##    ## ##     ## ##     ## #### ########  
# UNRAID

      {# {{ create_warning_background("unraid_problem", "binary_sensor.unraid", 3, 80) }} #}

      {# - type: state-icon
        entity: binary_sensor.proxmox
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: 3%
          top: 80%
          transform: translate(-50%, -50%) scale({{ group_scaleX }}, {{ group_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: Proxmox Server
                show_header_toggle: false
                type: grid
                cards:
                  - type: iframe
                    url: https://proxmox.lan.eigeland.net
            deviceID:
              - this #}

{#          browser_mod:
            service: browser_mod.popup
            data:
              content:
                title: Temperature & Humidity Sensors
                show_header_toggle: false
                type: grid
                columns: 1
                square: false
                card_mod:
                style: |
                  :host .content {
                    width: 75vw;
                    height: 75;
                  }
                cards:
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: grid
                        columns: 1
                        square: false
                        cards:
                          - type: 'custom:slider-entity-row'
                            entity: input_number.ui_water_boiler_graph_hours
                            hide_state: false #}

  
          {# browser_mod:
            command: popup
            hide_header: true
            deviceID:
              - this
            style: |
              :host .content {
                width: 80vw;
                height: 85vh;
              }
            title: UnRAID Server
            card:
              type: iframe
              url: https://proxmox.lan.eigeland.net
              aspect: 100% #}


   ###     ######  ######## ####  #######  ##    ##  ######  
  ## ##   ##    ##    ##     ##  ##     ## ###   ## ##    ## 
 ##   ##  ##          ##     ##  ##     ## ####  ## ##       
##     ## ##          ##     ##  ##     ## ## ## ##  ######  
######### ##          ##     ##  ##     ## ##  ####       ## 
##     ## ##    ##    ##     ##  ##     ## ##   ### ##    ## 
##     ##  ######     ##    ####  #######  ##    ##  ######  
# ACTIONS

      {% for entity in actions_entities %}
      - type: state-icon
        entity: {{ entity }}
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: {{ actions_left.value }}%
          top: {{ actions_top }}%
          transform: translate(0%, 100%) scale({{ actions_scaleX }}, {{ actions_scaleY }})
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
        hold_action:
          action: more-info
        {% set actions_left.value = actions_left.value + actions_left_offset %}
      {% endfor %}

 ######   #######  ##    ## ########  #### ######## ####  #######  ##    ##    ###    ##             ######## ##    ## ######## #### ######## ##    ## 
##    ## ##     ## ###   ## ##     ##  ##     ##     ##  ##     ## ###   ##   ## ##   ##             ##       ###   ##    ##     ##     ##     ##  ##  
##       ##     ## ####  ## ##     ##  ##     ##     ##  ##     ## ####  ##  ##   ##  ##             ##       ####  ##    ##     ##     ##      ####   
##       ##     ## ## ## ## ##     ##  ##     ##     ##  ##     ## ## ## ## ##     ## ##             ######   ## ## ##    ##     ##     ##       ##    
##       ##     ## ##  #### ##     ##  ##     ##     ##  ##     ## ##  #### ######### ##             ##       ##  ####    ##     ##     ##       ##    
##    ## ##     ## ##   ### ##     ##  ##     ##     ##  ##     ## ##   ### ##     ## ##             ##       ##   ###    ##     ##     ##       ##    
 ######   #######  ##    ## ########  ####    ##    ####  #######  ##    ## ##     ## ########       ######## ##    ##    ##    ####    ##       ##    
# CONDITIONAL ENTITY
# Physical enities that appear only on certain condition

      {% for entity, state, left, top, icon, tap_action in conditional_entities %}

      - type: conditional
        conditions:
          - entity: {{ entity }}
            state: '{{ state }}'
        elements:
          - type: icon
            icon: mdi:{{ icon }}
            entity: {{ entity }}
            style:
              color: {{ conditional_color }}
              left: {{ left }}%
              top: {{ top }}%
              transform: 'translate(0, -50%)'
            tap_action:
              action: {{ tap_action }}
            double_tap_action:
              action: none
            hold_tap_action:
              action: none

      {% endfor %}

########  ######## ######## ########  ########  ######  ##     ##                ########  ######## ##        #######     ###    ########  
##     ## ##       ##       ##     ## ##       ##    ## ##     ##                ##     ## ##       ##       ##     ##   ## ##   ##     ## 
##     ## ##       ##       ##     ## ##       ##       ##     ##                ##     ## ##       ##       ##     ##  ##   ##  ##     ## 
########  ######   ######   ########  ######    ######  #########                ########  ######   ##       ##     ## ##     ## ##     ## 
##   ##   ##       ##       ##   ##   ##             ## ##     ##                ##   ##   ##       ##       ##     ## ######### ##     ## 
##    ##  ##       ##       ##    ##  ##       ##    ## ##     ##                ##    ##  ##       ##       ##     ## ##     ## ##     ## 
##     ## ######## ##       ##     ## ########  ######  ##     ##                ##     ## ######## ########  #######  ##     ## ########  
# REFRESH RELOAD

      - type: icon
        icon: mdi:refresh
        style:
          color: {{ settings_color }}
          left: {{ settings_left }}%
          top: {{ settings_top + 2.5 }}%
          transform: translate(0%, 0%) scale({{ settings_scaleX }}, {{ settings_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.refresh
            data:
              [browser_id: this]

            
        double_tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.refresh
            data:
              [browser_id: this]
        hold_action:
          action: none