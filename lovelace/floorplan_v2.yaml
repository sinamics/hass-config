# lovelace_gen

# http://patorjk.com/software/taag/#p=display&f=Banner3&t=Type%20Something%20

########  ######## ######## #### ##    ## #### ######## ####  #######  ##    ##  ######
##     ## ##       ##        ##  ###   ##  ##     ##     ##  ##     ## ###   ## ##    ##
##     ## ##       ##        ##  ####  ##  ##     ##     ##  ##     ## ####  ## ##
##     ## ######   ######    ##  ## ## ##  ##     ##     ##  ##     ## ## ## ##  ######
##     ## ##       ##        ##  ##  ####  ##     ##     ##  ##     ## ##  ####       ##
##     ## ##       ##        ##  ##   ###  ##     ##     ##  ##     ## ##   ### ##    ##
########  ######## ##       #### ##    ## ####    ##    ####  #######  ##    ##  ######
# DEFINITIONS

#--------------------------------------------------------------------------------------------------
# General

{% set border_radius = 12 %}
{% set background_color = 'rgba(255, 255, 255, 0.1)' %}
{% set background_color_alert = 'rgba(255, 0, 0, 0.2)' %}
{% set group_scaleX, group_scaleY = 1, 1 %}

{% set scheduler_left_offset, scheduler_top_offset = 1, 1 %}
{% set scheduler_scaleX, scheduler_scaleY = 0.6, 0.6 %}

{% set timer_top_offset = 2.5 %}

{% set days = [("sunday"   , "1", "Sun", "ראשון"),
               ("monday"   , "2", "Mon", "שני"),
               ("tuesday"  , "3", "Tue", "שלישי"),
               ("wednesday", "4", "Wed", "רביעי"),
               ("thursday" , "5", "Thu", "חמישי"),
               ("friday"   , "6", "Fri", "שישי"),
               ("saturday" , "7", "Sat", "שבת")] %}

#--------------------------------------------------------------------------------------------------
# Lights
#  - List all active areas.
#    If more than one exists with the same name - must be consecutive
#  - List groups for group buttons
#--------------------------------------------------------------------------------------------------
#                 entity                          , group       , left, top, scaleX, scaleY, deg)
{% set lights = [("smart_led_strip"              , "downstairs", 69  , 67  , 1.3, 2  , 0)] %}

#                       group       , left, top
{% set light_groups = [("outside"   , 53, 37),
                       ("downstairs", 53, 74),
                       ("upstairs"  , 28, 74),
                       ("hallway"      , 3 , 74)] %}

#--------------------------------------------------------------------------------------------------
# HVAC
#--------------------------------------------------------------------------------------------------
#                 entity     , left, top
{% set hvacs = [("eigeland", 53 , 92)] %}

#--------------------------------------------------------------------------------------------------
# Navigation
#  - Entities are placed from bottom to top starting from navi_top value
#--------------------------------------------------------------------------------------------------
{% set navi_left, navi_top = 96, namespace(value=94) %}
{% set navi_left_offset, navi_top_offset = 1, 3 %}
{% set navi_scaleX, navi_scaleY, navi_scaleT = 0.3, 0.3, 3.5 %}
{% set navigations = ["kfar_yona", "petach_tikva", "work_aviva", "work_dan"] %}

#--------------------------------------------------------------------------------------------------
# Statusbar
#  - Icons are placed from right to left
#--------------------------------------------------------------------------------------------------
{% set statusbar_color = 'red' %}
{% set statusbar_left, statusbar_top = namespace(value=97), 1 %}
{% set statusbar_left_offset = -1.5 %}
{% set statusbar_scaleX, statusbar_scaleY = 0.8, 0.8 %}

#                           number,        entity                                        , state_t_f, state,      icon,             card_type
{% set statusbar_entities = [("1", "sensor.update_available"                                   , "t", "1",  "mdi:cloud-download", "ha_updates"),
                             ("2", "sensor.hp_deskjet_4620_series_ink_low"                     , "f", "0" , "mdi:printer-alert" , "entities"),
                             ("3", "sensor.water_consumption_limit_exceeded"                   , "f", "0" , "mdi:water-alert"   , "history-graph")] %}

{% set statusbar_details = [("2", "sensor.hp_deskjet_4620_series_black_ink"),
                            ("2", "sensor.hp_deskjet_4620_series_yellow_ink"),
                            ("2", "sensor.hp_deskjet_4620_series_magenta_ink"),
                            ("2", "sensor.hp_deskjet_4620_series_cyan_ink"),
                            ("3", "sensor.water_consumption_hourly_limit_exceeded"),
                            ("3", "sensor.water_consumption_daily_limit_exceeded"),
                            ("3", "sensor.water_consumption_monthly_limit_exceeded"),
                            ("3", "sensor.water_consumption_monthly_prediction_limit_exceeded"),
                            ("3", "sensor.water_consumption_hourly"),
                            ("3", "sensor.water_meter_16452690_today_s_consumption"),
                            ("3", "sensor.water_meter_16452690_monthly_consumption"),
                            ("3", "sensor.water_consumption_monthly_prediction")] %}

#--------------------------------------------------------------------------------------------------
# Settings
#  - Divided into "column" and seperated by "section"
#    If a sections is defined as "y" then the "label" is used as the header
#    The type can be either a "slider" or an "entity"
#--------------------------------------------------------------------------------------------------
{% set settings_color = 'gray' %}
{% set settings_left, settings_top = 98.5, 1 %}
{% set settings_scaleX, settings_scaleY = 0.8, 0.8 %}
#                             entity                                              , column, section, label                 , type
{% set settings_entities = [("input_number.hp_deskjet_4620_series_ink_low_limit"       , "1", "y", "Printers"              , "slider"),
                            ("input_number.water_consumption_hourly_limit"             , "1", "y", "Water Consumption"     , "slider"),
                            ("input_number.water_consumption_daily_limit"              , "1", "n", ""                      , "slider"),
                            ("input_number.water_consumption_monthly_limit"            , "1", "n", ""                      , "slider"),
                            ("input_number.water_consumption_monthly_prediciton_limit" , "1", "n", ""                      , "slider"),
                            ("input_number.boiler_disable_schedulers_temperature"      , "2", "y", "Water Boiler"          , "slider"),
                            ("script.1586449615879"                                    , "3", "y", "Home Assistant Control", "entity"),
                            ("input_boolean.ui_hide_room_temperatures"                 , "3", "y", "Hide"                  , "entity"),
                            ("input_boolean.ui_hide_water_boiler_temperatures"         , "3", "n", ""                      , "entity"),
                            ("input_boolean.ui_hide_weather          "                 , "3", "n", ""                      , "entity"),
                            ("input_boolean.ui_hide_calendar         "                 , "3", "n", ""                      , "entity"),
                            ("input_boolean.ui_hide_navigation"                        , "3", "n", ""                      , "entity")] %}

#--------------------------------------------------------------------------------------------------
# Actions
#  - Buttons are placed from left to right
#--------------------------------------------------------------------------------------------------
{% set actions_left, actions_top = namespace(value=60), 3 %}
{% set actions_left_offset = 8 %}
{% set actions_scaleX, actions_scaleY = 3, 3 %}
#                             entity
{% set actions_entities = [("input_boolean.away"     ),
                           ("input_boolean.goodnight"),
                           ("cover.garage_door"      )] %}

#--------------------------------------------------------------------------------------------------
# Temperature Sensors
#  - They include humidity and battery values as well
#--------------------------------------------------------------------------------------------------
{% set temperature_sensors_font_size = 75 %}
#                              entity                                  , category       , left, top
{% set temperature_sensors = [("1f_house_inside_livingroom_termometer_temperature"            , "room"         , 36.5, 93  ),
                              ("1f_house_inside_entrance_termometer_temperature"                      , "room"         , 45  , 59  ),
                              ("2f_house_inside_hall_termometer_temperature"                      , "room"         , 36  , 56  ),
                              ("1f_house_outside_laundryroom_termometer_temperature"                     , "room"         , 28  , 61.5)] %}

#                              entity                 , category       , left, top
{% set humidity_sensors = [("1f_house_inside_livingroom_termometer_humidity" , "room"         , 36.5, 93  ),
                           ("1f_house_inside_entrance_termometer_humidity"           , "room"         , 45  , 59  ),
                           ("2f_house_inside_hall_termometer_humidity"           , "room"         , 36  , 56  ),
                           ("1f_house_outside_laundryroom_termometer_humidity"          , "room"         , 28  , 61.5)] %}

#                              entity                     , category       , left, top
{% set battery_sensors = [("master_bedroom_battery_level" , "room"         , 36.5, 93  ),
                          ("noga_battery_level"           , "room"         , 45  , 59  ),
                          ("ella_battery_level"           , "room"         , 36  , 56  ),
                          ("tomer_battery_level"          , "room"         , 28  , 61.5)] %}

#--------------------------------------------------------------------------------------------------
# Conditional Entities
#  - Will only be displayed if condition "state" active
#--------------------------------------------------------------------------------------------------
{% set conditional_color = "red" %}
#                             entity                                                   , state, left, top, icon     , tap_action
{% set conditional_entities = [("switch.roof_right_table_power_relay"                    , "on", 10 , 67, "power"   , "toggle"),
                               ("binary_sensor.water_boiler_power_pump_controller_status", "on", 8.5, 47, "pump"    , "none"  ),
                               ("switch.main_bathroom_heater"                            , "on", 44 , 66, "radiator", "toggle"),
                               ("switch.master_bathroom_heater"                          , "on", 44 , 83, "radiator", "toggle")] %}

##     ##    ###     ######  ########   #######   ######  
###   ###   ## ##   ##    ## ##     ## ##     ## ##    ## 
#### ####  ##   ##  ##       ##     ## ##     ## ##       
## ### ## ##     ## ##       ########  ##     ##  ######  
##     ## ######### ##       ##   ##   ##     ##       ## 
##     ## ##     ## ##    ## ##    ##  ##     ## ##    ## 
##     ## ##     ##  ######  ##     ##  #######   ######  
# MACROS

{% macro create_schedulers_icons(entity, left, top) -%}
{% if (entity == "hvac_hallway") or (entity == "hvac_livingroom") %}
{% set schedulers = ['1', '2', '3', '4'] %}
{% else %}
{% set schedulers = ['1', '2'] %}
{% endif %}
{% for s in schedulers %}
      - type: conditional
        conditions:
          - entity: input_boolean.{{ entity }}_scheduler_enable{{ s }}
            state: 'on'
        elements:
          - icon: 'mdi:timer-outline'
            style:
              {% if s == '1' %}
              left: {{ left + scheduler_left_offset }}%
              top: {{ top - scheduler_top_offset }}%
              {% elif s == '2' %}
              left: {{ left + scheduler_left_offset }}%
              top: {{ top + scheduler_top_offset }}%
              {% elif s == '3' %}
              left: {{ left - scheduler_left_offset }}%
              top: {{ top - scheduler_top_offset }}%
              {% elif s == '4' %}
              left: {{ left - scheduler_left_offset }}%
              top: {{ top + scheduler_top_offset }}%
              {% endif %}
              transform: translate(-50%, -50%) scale({{ scheduler_scaleX }}, {{ scheduler_scaleY }})
            type: icon
{% endfor %}
{%- endmacro %}

#########################################################
#########################################################
#########################################################

{% macro create_warning_background(entity_problem, entity, left, top) -%}
      - type: conditional
        conditions:
          - entity: sensor.{{ entity_problem }}
            state_not: '0'
        elements:
          - type: state-icon
            entity: {{ entity }}
            style:
              background-color: {{ background_color_alert }}
              border-radius: {{ border_radius }}%
              left: {{ left }}%
              top: {{ top }}%
              transform: translate(-50%, -50%) scale({{ group_scaleX}}, {{ group_scaleY }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
{%- endmacro %}

#########################################################
#########################################################
#########################################################
# types: DSD     - Day Start Duration
#        DS      - Day Start
#        S_HVAC  - Start HVAC

{% macro create_schedulers_popup(entity, scheduler_type) -%}
              {% if (scheduler_type == "S_HVAC") %}
              {% set num_schedulers = 4 %}
              {% set schedulers = ['1', '2', '3', '4'] %}
              {% else %}
              {% set num_schedulers = 2 %}
              {% set schedulers = ['1', '2'] %}
              {% endif %}
              type: grid
              columns: {{ num_schedulers }}
              square: false
              cards:
                {% for s in schedulers %}
                - type: grid
                  columns: 1
                  square: false
                  title: Schedule {{ s }}
                  cards:
                    {% if (scheduler_type == "DSD") or (scheduler_type == "DS") %}
                    - type: grid
                      columns: 7
                      square: false
                      cards:
                        {% for day, number, name, name_he in days %}
                        - type: button
                          entity: input_boolean.{{ entity }}_day_{{ day }}{{ s }}
                          name: {{ name_he }}
                          icon: mdi:numeric-{{ number }}-box-outline
                          show_name: true
                          show_icon: true
                        {% endfor %}
                    {% endif %}
                    - type: entities
                      # icon: 'mdi:timer-outline'
                      show_header_toggle: false
                      state_color: false
                      # title: Schedule {{ s }}
                      entities:
                        {% if (scheduler_type == "DSD") or (scheduler_type == "DS") %}
                        # - type: section
                        - entity: input_boolean.{{ entity }}_scheduler_enable{{ s }}
                        - type: 'custom:time-picker-card'
                          entity: input_datetime.{{ entity }}_start_time{{ s }}
                          layout:
                            embedded: true
                            name: inside
                            align_controls: right
                          {% endif %}
                        {% if (scheduler_type == "S_HVAC") %}
                        # - type: section
                        - entity: input_boolean.{{ entity }}_scheduler_enable{{ s }}
                        - type: 'custom:simple-thermostat'
                          entity: climate.{{ entity }}_virtual_{{ s }}
                          header: false
                          setpoints:
                          layout:
                            step: row
                            mode:
                              names: false
                              icons: true
                              headings: false
                          decimals: 0
                          step_size: 1
                          hide:
                            state: true
                            temperature: true
                          control:
                            hvac: true
                            fan:
                              "low":
                                icon: mdi:fan-speed-1
                              "mid":
                                icon: mdi:fan-speed-2
                              "high":
                                icon: mdi:fan-speed-3
                        - type: 'custom:time-picker-card'
                          entity: input_datetime.{{ entity }}_start_time{{ s }}
                          layout:
                            embedded: true
                            name: inside
                            align_controls: right
                        {% endif %}
                        {% if scheduler_type == "DSD" %}
                        - type: section
                        - type: 'custom:slider-entity-row'
                          entity: input_number.{{ entity }}_timer_duration{{ s }}
                          hide_state: false
                        {% endif %}
                {% endfor %}
{%- endmacro %}

 ######  ########    ###    ########  ######## 
##    ##    ##      ## ##   ##     ##    ##    
##          ##     ##   ##  ##     ##    ##    
 ######     ##    ##     ## ########     ##    
      ##    ##    ######### ##   ##      ##    
##    ##    ##    ##     ## ##    ##     ##    
 ######     ##    ##     ## ##     ##    ##    
# START

badges: []
icon: 'mdi:home-outline'
panel: true
path: floorplan
title: FloorPlan
cards:
  - type: picture-elements
    image: /local/images/floorplan_v2/background_t.png
    elements:

########  ####  ######  ##     ## ######## ######## ########   ######  
##     ##  ##  ##    ## ##     ##    ##    ##       ##     ## ##    ## 
##     ##  ##  ##       ##     ##    ##    ##       ##     ## ##       
########   ##  ##       ##     ##    ##    ######   ########   ######  
##         ##  ##       ##     ##    ##    ##       ##   ##         ## 
##         ##  ##    ## ##     ##    ##    ##       ##    ##  ##    ## 
##        ####  ######   #######     ##    ######## ##     ##  ######  
# PICTURES

      {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - entity: light.{{ entity }}
        state_image:
          'unavailable': /local/images/floorplan_v2/transparent_square.png
          'off': /local/images/floorplan_v2/transparent_square.png
          'on': /local/images/floorplan_v2/lights/{{ entity }}.png
        style:
          left: 50%
          top: 50%
          width: 100%
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
        type: image
      {% endif %}
      {% endfor %}


##      ## ########    ###    ######## ##     ## ######## ########  
##  ##  ## ##         ## ##      ##    ##     ## ##       ##     ## 
##  ##  ## ##        ##   ##     ##    ##     ## ##       ##     ## 
##  ##  ## ######   ##     ##    ##    ######### ######   ########  
##  ##  ## ##       #########    ##    ##     ## ##       ##   ##   
##  ##  ## ##       ##     ##    ##    ##     ## ##       ##    ##  
 ###  ###  ######## ##     ##    ##    ##     ## ######## ##     ## 
#WEATHER

      - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_weather
            state_not: 'on'
        elements:
          - type: custom:weather-card
            #entity: weather.darksky_daily
            entity: weather.home
            {# icons: "/local/icons/weather_icons/static/" #}
            current: true
            details: true # true false
            number_of_forecasts: 5
            hourly_forecast: false
            style:
              #border: 1px solid red
              left: -2% #-3% 0%
              top: -2%  #-3% 0%
              transform: 'translate(0%, 0%) scale(0.9, 0.9)'
          - type: image
            image: /local/images/floorplan_v2/transparent_square.png
            entity: weather.darksky_hourly
            style:
              #border: 1px solid red
              left: 0%
              top: 0%
              width: 27.25%
              height: 35%
              transform: 'translate(0%, 0%) scale(1, 1)'
            tap_action:
              action: fire-dom-event
              browser_mod:
                command: popup
                deviceID:
                  - this
                style: |
                  :host .content {
                    width: 80vw;
                  }
                title: Hourly Weather Forecast
                card:
                  type: 'custom:weather-card'
                  entity: weather.darksky_hourly
                  hourly_forecast: true
                  forecast: true
                  number_of_forecasts: '18'
                  details: false
                  current: false
                  icons: /local/icons/weather_icons/static/
            double_tap_action:
              action: none
            hold_action:
              action: none

######     ###    ##       ######## ##    ## ########     ###    ########   
##    ##   ## ##   ##       ##       ###   ## ##     ##   ## ##   ##     ## 
##        ##   ##  ##       ##       ####  ## ##     ##  ##   ##  ##     ## 
##       ##     ## ##       ######   ## ## ## ##     ## ##     ## ########  
##       ######### ##       ##       ##  #### ##     ## ######### ##   ##   
##    ## ##     ## ##       ##       ##   ### ##     ## ##     ## ##    ##  
######  ##     ## ######## ######## ##    ## ########  ##     ## ##     ##  
#CALENDAR

      - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_calendar
            state_not: 'on'
        elements:
          - type: 'custom:atomic-calendar-revive'
            entities:
              - entity: calendar.family
                name: calendar.family
              {# - entity: calendar.cbegelan_gmail_com
                name: calendar.cbegelan_gmail_com #}
            maxDaysToShow: 7
            maxEventCount: 4
            showLocation: true
            showMonth: true
            showWeekDay: true
            showDate: false
            showDescription: false
            showNoEventsForToday: true
            disableEventLink: true
            disableLocationLink: true
            defaultMode: Event
            refreshInterval: 60
            showHours: true
            showRelativeTime: false
            europeanDate: false
            dateFormat: 'LL'
            hoursFormat: 'HH:mm'
            style:
              left: 30%
              top: -1%
              width: 20%
              transform: 'translate(0%, 0%) scale(1, 0.96)'

##       ####  ######   ##     ## ########  ######  
##        ##  ##    ##  ##     ##    ##    ##    ## 
##        ##  ##        ##     ##    ##    ##       
##        ##  ##   #### #########    ##     ######  
##        ##  ##    ##  ##     ##    ##          ## 
##        ##  ##    ##  ##     ##    ##    ##    ## 
######## ####  ######   ##     ##    ##     ######  
# LIGHTS

      # ------------------------------
      # Define LIGHTS active areas
      # ------------------------------

      {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) %}
      - entity: light.{{ entity }}
        image: /local/images/floorplan_v2/transparent.png
        style:
          #border: 1px solid red
          left: {{ left }}%
          top: {{ top }}%
          transform: rotate({{ deg }}deg) scale({{ scaleX }}, {{ scaleY }})
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
        hold_action:
          {% if entity == "kitchen_table_light" %}
          action: fire-dom-event
          browser_mod:
            command: more_info
            deviceID:
              - this
            style: |
              :host .content {
                width: 30vw;
              }
            entity_id: light.kitchen_table_light_ambilight
          {% else %}
          action: more-info
          {% endif %}
        type: image
      {%- endif %}
      {% endfor %}

      # ---------------------------
      # ---------------------------
      # Define Light Group Controls
      # ---------------------------
      # ---------------------------

      {% for entity_group, left, top in light_groups %}

      {{ create_warning_background(entity_group ~ "_lights_problem", "light." ~ entity_group ~ "_lights", left, top) }}

      - entity: light.{{ entity_group }}_lights
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: {{ left }}%
          top: {{ top }}%
          transform: translate(-50%, -50%) scale({{ group_scaleX}}, {{ group_scaleY }})
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
        hold_action:
          action: fire-dom-event
          browser_mod:
                service: browser_mod.popup
                data:
                  content:
                    title: {{ entity_group.capitalize() }} Lights
                    show_header_toggle: false
                    type: entities
                    entities:
                      {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
                      {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) and (entity_group == group) %}
                      - light.{{ entity }}
                      {% endif %}
                      {% endfor %}
                    deviceID:
                      - this
          {# browser_mod:
            command: popup
            deviceID:
              - this
            title: {{ entity_group.capitalize() }} Lights
            card:
              entities:
                {% for entity, group, left, top, scaleX, scaleY, deg in lights %}
                {% if ((loop.index0 == 0) or ((loop.previtem is defined) and (entity != loop.previtem))) and (entity_group == group) %}
                - light.{{ entity }}
                {% endif %}
                {% endfor %}
              show_header_toggle: false
              type: entities #}
        type: state-icon
      {% endfor %}

######## ######## ##     ## ########  ######## ########     ###    ######## ##     ## ########  ########     ######  ######## ##    ##  ######   #######  ########   ######  
   ##    ##       ###   ### ##     ## ##       ##     ##   ## ##      ##    ##     ## ##     ## ##          ##    ## ##       ###   ## ##    ## ##     ## ##     ## ##    ## 
   ##    ##       #### #### ##     ## ##       ##     ##  ##   ##     ##    ##     ## ##     ## ##          ##       ##       ####  ## ##       ##     ## ##     ## ##       
   ##    ######   ## ### ## ########  ######   ########  ##     ##    ##    ##     ## ########  ######       ######  ######   ## ## ##  ######  ##     ## ########   ######  
   ##    ##       ##     ## ##        ##       ##   ##   #########    ##    ##     ## ##   ##   ##                ## ##       ##  ####       ## ##     ## ##   ##         ## 
   ##    ##       ##     ## ##        ##       ##    ##  ##     ##    ##    ##     ## ##    ##  ##          ##    ## ##       ##   ### ##    ## ##     ## ##    ##  ##    ## 
   ##    ######## ##     ## ##        ######## ##     ## ##     ##    ##     #######  ##     ## ########     ######  ######## ##    ##  ######   #######  ##     ##  ######  
# TEMPERATURE SENSORS

      {% for entity, category, left, top in temperature_sensors %}
      - type: conditional
        conditions:
          {% if category == "room" %}
          - entity: input_boolean.ui_hide_room_temperatures
          {% elif category == "water_boiler" %}
          - entity: input_boolean.ui_hide_water_boiler_temperatures
          {% endif %}
            state_not: 'on'
        elements:
        - type: state-label
          entity: sensor.{{ entity }}
          style:
            left: {{ left }}%
            top: {{ top }}%
            transform: translate(0, -50%)
            font-size: {{ temperature_sensors_font_size }}%
      {% endfor %}

      - type: state-icon
        entity: input_boolean.ui_hide_room_temperatures
        icon: mdi:thermometer
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: 3%
          top: 92%
          transform: translate(-50%, -50%) scale({{ group_scaleX }}, {{ group_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
                service: browser_mod.popup
                data:
                  content:
                    title: Temperature & Humidity Sensors
                    show_header_toggle: false
                    type: grid
                    columns: 1
                    square: false
                    card_mod:
                    style: |
                      :host .content {
                        width: 75vw;
                        height: 75;
                      }
                    cards:
                      - type: grid
                        columns: 1
                        square: false
                        cards:
                          - type: grid
                            columns: 1
                            square: false
                            cards:
                              - type: 'custom:slider-entity-row'
                                entity: input_number.ui_water_boiler_graph_hours
                                hide_state: false
                          - type: 'custom:config-template-card'
                            variables:
                              HOURS: states['input_number.ui_water_boiler_graph_hours'].state
                            entities:
                              - input_number.ui_water_boiler_graph_hours
                            card:
                              type: history-graph
                              entities:
                                {% for entity, category, left, top in temperature_sensors %}
                                {% if category == "room" %}
                                - entity: sensor.{{ entity }}
                                {% endif %}
                                {% endfor %}
                                {% for entity, category, left, top in humidity_sensors %}
                                {% if category == "room" %}
                                - entity: sensor.{{ entity }}
                                {% endif %}
                                {% endfor %}
                              hours_to_show: "${ HOURS }"
                              refresh_interval: 0
                    deviceID:
                      - this
        double_tap_action:
          action: none
        hold_action:
          action: none

##     ## ##     ##    ###     ######  
##     ## ##     ##   ## ##   ##    ## 
##     ## ##     ##  ##   ##  ##       
######### ##     ## ##     ## ##       
##     ##  ##   ##  ######### ##       
##     ##   ## ##   ##     ## ##    ## 
##     ##    ###    ##     ##  ######  
# HVAC

      # --------------------------------------------
      # --------------------------------------------
      # Define HVAC Controls & Start_Stop Schedulers
      # --------------------------------------------
      # --------------------------------------------

      {% for entity, left, top in hvacs %}

      {{ create_warning_background("hvac_" ~ entity ~ "_problem", "climate.hvac_" ~ entity, left, top) }}

      - type: state-icon
        entity: climate.hvac_{{ entity }}
        icon: 'mdi:air-conditioner'
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: {{ left }}%
          top: {{ top }}%
          transform: translate(-50%, -50%) scale({{ scaleX }}, {{ scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            deviceID:
              - this
            service: browser_mod.popup
            data:
              content:
                title: {{ entity.capitalize() }} Air Conditioning
                show_header_toggle: false
                type: custom:simple-thermostat
                entity: climate.hvac_{{ entity }}
                header: false
                setpoints:
                layout:
                  step: row
                  mode:
                    names: false
                    icons: true
                    headings: false
                decimals: 0
                step_size: 1
                hide:
                  state: true
                  temperature: true
                control:
                  hvac: true
                  fan:
                    "low":
                      icon: mdi:fan-speed-1
                    "mid":
                      icon: mdi:fan-speed-2
                    "high":
                      icon: mdi:fan-speed-3
        double_tap_action:
          action: more-info
        hold_action:
          action: none
          {# action: fire-dom-event
          browser_mod:
            command: popup
            deviceID:
              - this
            style: |
              :host .content {
                height: 55vh;
                width: 85vw;
              }
            title: {{ entity.capitalize() }} Air Conditioning
            card:
              {{ create_schedulers_popup("hvac_" ~ entity, "S_HVAC") }} #}

      # Show temperature
      - type: state-label
        entity: sensor.{{ entity ~ '_temperature' }}
        style:
          left: {{ left + 1 }}%
          top: {{ top }}%
          transform: 'translate(0, -50%)'

      # Show airconditioner state (if ON)
      - type: conditional
        conditions:
          - entity: climate.hvac_{{ entity }}
            state_not: 'off'
        elements:
          - type: state-label
            entity: climate.hvac_{{ entity }}
            style:
              left: {{ left + 1 }}%
              top: {{ top + 1.5 }}%
              transform: 'translate(0, -50%)'
          - type: state-label
            entity: climate.hvac_{{ entity }}
            attribute: "fan_mode"
            style:
              left: {{ left + 3 }}%
              top: {{ top + 1.5 }}%
              transform: 'translate(0, -50%)'
          - type: state-label
            entity: climate.hvac_{{ entity }}
            attribute: "temperature"
            style:
              left: {{ left + 4.5 }}%
              top: {{ top + 1.5 }}%
              transform: 'translate(0, -50%)'

      {{ create_schedulers_icons("hvac_" ~ entity, left, top) }}
      {% endfor %}

##    ##    ###    ##     ## ####  ######      ###    ######## ####  #######  ##    ## 
###   ##   ## ##   ##     ##  ##  ##    ##    ## ##      ##     ##  ##     ## ###   ## 
####  ##  ##   ##  ##     ##  ##  ##         ##   ##     ##     ##  ##     ## ####  ## 
## ## ## ##     ## ##     ##  ##  ##   #### ##     ##    ##     ##  ##     ## ## ## ## 
##  #### #########  ##   ##   ##  ##    ##  #########    ##     ##  ##     ## ##  #### 
##   ### ##     ##   ## ##    ##  ##    ##  ##     ##    ##     ##  ##     ## ##   ### 
##    ## ##     ##    ###    ####  ######   ##     ##    ##    ####  #######  ##    ## 
# NAVIGATION

# Navigation images/logod should be 300x300 with transparent background

      - type: conditional
        conditions:
          - entity: input_boolean.ui_hide_navigation
            state_not: 'on'
        elements:
          {% for entity in navigations %}
          - type: image
            image: /local/images/floorplan_v2/navigation/{{ entity }}.png
            style:
              left: {{ navi_left }}%
              top: {{ navi_top.value }}%
              transform: translate(-50%, -50%) scale({{ navi_scaleX }}, {{ navi_scaleY }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none

          - type: state-label
            entity: sensor.{{ entity }}
            attribute: route
            style:
              left: {{ navi_left - navi_left_offset}}%
              top: {{ navi_top.value }}%
              transform: translate(-100%, -50%) scale({{ navi_scaleX * navi_scaleT }}, {{ navi_scaleY * navi_scaleT }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none

          - type: state-label
            entity: sensor.{{ entity }}_ui
            style:
              left: {{ navi_left + navi_left_offset }}%
              top: {{ navi_top.value }}%
              transform: translate(0%, -50%) scale({{ navi_scaleX * navi_scaleT }}, {{ navi_scaleY * navi_scaleT }})
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
          {% set navi_top.value = navi_top.value - navi_top_offset %}
          {% endfor %}

 ######  ########    ###    ######## ##     ##  ######        ########     ###    ########  
##    ##    ##      ## ##      ##    ##     ## ##    ##       ##     ##   ## ##   ##     ## 
##          ##     ##   ##     ##    ##     ## ##             ##     ##  ##   ##  ##     ## 
 ######     ##    ##     ##    ##    ##     ##  ######        ########  ##     ## ########  
      ##    ##    #########    ##    ##     ##       ##       ##     ## ######### ##   ##   
##    ##    ##    ##     ##    ##    ##     ## ##    ##       ##     ## ##     ## ##    ##  
 ######     ##    ##     ##    ##     #######   ######        ########  ##     ## ##     ## 
# STATUS BAR

      {% for number, entity, state_t_f, state, icon, card_type in statusbar_entities %}
      - type: conditional
        conditions:
          - entity: {{ entity }}
            {% if state_t_f == "t" %}
            state: "{{ state }}"
            {% else %}
            state_not: "{{ state }}"
            {% endif %}
        elements:
          - type: icon
            icon: {{ icon }}
            entity: {{ entity }}
            tap_action:
            {% if (card_type == "more-info") %}
              action: more-info
            {% else %}
              action: fire-dom-event
              browser_mod:
                command: popup
                deviceID:
                  - this
                style: |
                  :host .content {
                    width: 40vw;
                    height: 50vh;
                  }
                title: Details
                card:
                {% if (card_type == "entities") %}
                  type: entities
                  show_header_toggle: false
                  entities:
                  {% for number2, entity2 in statusbar_details %}
                  {% if number2 == number %}
                    - entity: {{ entity2 }}
                  {% endif %}
                  {% endfor %}
                {% elif (card_type == "history-graph") %}
                  type: history-graph
                  entities:
                  {% for number2, entity2 in statusbar_details %}
                  {% if number2 == number %}
                    - entity: {{ entity2 }}
                  {% endif %}
                  {% endfor %}
                {% elif (card_type == "ha_updates") %}
                  type: markdown
                  entity_id: {{ entity }}
                  {% raw %}
                  content: |
                    # Home Assistant updates:
                    {% if states('group.updates') == "on" %}
                      {% for updates in state_attr('group.updates', 'entity_id') %}
                        {% if states(updates) == "on" %}
                      - <img src="{{ state_attr(updates, 'entity_picture') }}" alt="-" width="15"/> **{{ state_attr(updates, 'title') }}** _{{ state_attr(updates, 'installed_version') }}_ -> _{{ state_attr(updates, 'latest_version') }}_
                        {% endif %}
                      {% endfor %}
                    {% else %}
                      - No updates
                    {% endif %}
                    ---
                    # HACS updates:
                    {% if states('sensor.hacs') != "0" %}
                      {% for repo in state_attr('sensor.hacs', 'repositories') %}
                      - **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
                      {% endfor %}
                    {% else %}
                      - No updates
                    {% endif %}
                  {% endraw %}
                {% else %}
                  type: markdown
                  content: "**Card type not defined**"
                {% endif %}
              {% endif %}
            style:
              color: {{ statusbar_color }}
              left: {{ statusbar_left.value }}%
              top: {{ statusbar_top }}%
              transform: translate(0%, 0%) scale({{ statusbar_scaleX }}, {{ statusbar_scaleY }})
            {% set statusbar_left.value = statusbar_left.value + statusbar_left_offset %}
      {% endfor %}

 ######  ######## ######## ######## #### ##    ##  ######    ######  
##    ## ##          ##       ##     ##  ###   ## ##    ##  ##    ## 
##       ##          ##       ##     ##  ####  ## ##        ##       
 ######  ######      ##       ##     ##  ## ## ## ##   ####  ######  
      ## ##          ##       ##     ##  ##  #### ##    ##        ## 
##    ## ##          ##       ##     ##  ##   ### ##    ##  ##    ## 
 ######  ########    ##       ##    #### ##    ##  ######    ######  
# SETTINGS

      - type: icon
        icon: mdi:cog
        style:
          color: {{ settings_color }}
          left: {{ settings_left }}%
          top: {{ settings_top }}%
          transform: translate(0%, 0%) scale({{ settings_scaleX }}, {{ settings_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            command: popup
            deviceID:
              - this
            style: |
              :host .content {
                width: 85vw;
                height: 50vh;
              }
            title: Settings
            card:
              type: grid
              {% set num_settings_columns = 3 %}
              columns: {{ num_settings_columns }}
              square: false
              cards:
                {% for current_column in ['1', '2', '3'] %}
                - type: entities
                  show_header_toggle: false
                  entities:
                    {% for entity, column, section, label, type in settings_entities %}
                      {% if column == current_column %}
                        {% if section == "y" %}
                    - type: section
                      label: {{ label }}
                        {% endif %}
                        {%if type == "slider" %}
                    - type: 'custom:slider-entity-row'
                      entity: {{ entity }}
                      hide_state: false
                        {% else %}
                    - entity: {{ entity }}
                        {% endif %}
                      {% endif %}
                    {% endfor %}
                    - type: section
                {% endfor %}

##     ## ##    ## ########     ###    #### ########  
##     ## ###   ## ##     ##   ## ##    ##  ##     ## 
##     ## ####  ## ##     ##  ##   ##   ##  ##     ## 
##     ## ## ## ## ########  ##     ##  ##  ##     ## 
##     ## ##  #### ##   ##   #########  ##  ##     ## 
##     ## ##   ### ##    ##  ##     ##  ##  ##     ## 
 #######  ##    ## ##     ## ##     ## #### ########  
# UNRAID

      {# {{ create_warning_background("unraid_problem", "binary_sensor.unraid", 3, 80) }}

      - type: state-icon
        entity: binary_sensor.unraid
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: 3%
          top: 80%
          transform: translate(-50%, -50%) scale({{ group_scaleX }}, {{ group_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            command: popup
            hide_header: true
            deviceID:
              - this
            style: |
              :host .content {
                width: 80vw;
                height: 85vh;
              }
            title: UnRAID Server
            card:
              type: iframe
              url: http://192.168.1.104/Dashboard
              aspect: 100%
        double_tap_action:
          action: none
        hold_action:
          action: none #}

   ###     ######  ######## ####  #######  ##    ##  ######  
  ## ##   ##    ##    ##     ##  ##     ## ###   ## ##    ## 
 ##   ##  ##          ##     ##  ##     ## ####  ## ##       
##     ## ##          ##     ##  ##     ## ## ## ##  ######  
######### ##          ##     ##  ##     ## ##  ####       ## 
##     ## ##    ##    ##     ##  ##     ## ##   ### ##    ## 
##     ##  ######     ##    ####  #######  ##    ##  ######  
# ACTIONS

      {% for entity in actions_entities %}
      - type: state-icon
        entity: {{ entity }}
        style:
          background-color: {{ background_color }}
          border-radius: {{ border_radius }}%
          left: {{ actions_left.value }}%
          top: {{ actions_top }}%
          transform: translate(0%, 100%) scale({{ actions_scaleX }}, {{ actions_scaleY }})
        tap_action:
          action: toggle
        double_tap_action:
          action: more-info
        hold_action:
          action: more-info
        {% set actions_left.value = actions_left.value + actions_left_offset %}
      {% endfor %}

 ######   #######  ##    ## ########  #### ######## ####  #######  ##    ##    ###    ##             ######## ##    ## ######## #### ######## ##    ## 
##    ## ##     ## ###   ## ##     ##  ##     ##     ##  ##     ## ###   ##   ## ##   ##             ##       ###   ##    ##     ##     ##     ##  ##  
##       ##     ## ####  ## ##     ##  ##     ##     ##  ##     ## ####  ##  ##   ##  ##             ##       ####  ##    ##     ##     ##      ####   
##       ##     ## ## ## ## ##     ##  ##     ##     ##  ##     ## ## ## ## ##     ## ##             ######   ## ## ##    ##     ##     ##       ##    
##       ##     ## ##  #### ##     ##  ##     ##     ##  ##     ## ##  #### ######### ##             ##       ##  ####    ##     ##     ##       ##    
##    ## ##     ## ##   ### ##     ##  ##     ##     ##  ##     ## ##   ### ##     ## ##             ##       ##   ###    ##     ##     ##       ##    
 ######   #######  ##    ## ########  ####    ##    ####  #######  ##    ## ##     ## ########       ######## ##    ##    ##    ####    ##       ##    
# CONDITIONAL ENTITY
# Physical enities that appear only on certain condition

      {% for entity, state, left, top, icon, tap_action in conditional_entities %}

      - type: conditional
        conditions:
          - entity: {{ entity }}
            state: '{{ state }}'
        elements:
          - type: icon
            icon: mdi:{{ icon }}
            entity: {{ entity }}
            style:
              color: {{ conditional_color }}
              left: {{ left }}%
              top: {{ top }}%
              transform: 'translate(0, -50%)'
            tap_action:
              action: {{ tap_action }}
            double_tap_action:
              action: none
            hold_tap_action:
              action: none

      {% endfor %}

########  ######## ######## ########  ########  ######  ##     ##                ########  ######## ##        #######     ###    ########  
##     ## ##       ##       ##     ## ##       ##    ## ##     ##                ##     ## ##       ##       ##     ##   ## ##   ##     ## 
##     ## ##       ##       ##     ## ##       ##       ##     ##                ##     ## ##       ##       ##     ##  ##   ##  ##     ## 
########  ######   ######   ########  ######    ######  #########                ########  ######   ##       ##     ## ##     ## ##     ## 
##   ##   ##       ##       ##   ##   ##             ## ##     ##                ##   ##   ##       ##       ##     ## ######### ##     ## 
##    ##  ##       ##       ##    ##  ##       ##    ## ##     ##                ##    ##  ##       ##       ##     ## ##     ## ##     ## 
##     ## ######## ##       ##     ## ########  ######  ##     ##                ##     ## ######## ########  #######  ##     ## ########  
# REFRESH RELOAD

      - type: icon
        icon: mdi:refresh
        style:
          color: {{ settings_color }}
          left: {{ settings_left }}%
          top: {{ settings_top + 2.5 }}%
          transform: translate(0%, 0%) scale({{ settings_scaleX }}, {{ settings_scaleY }})
        tap_action:
          action: fire-dom-event
          browser_mod:
            command: lovelace_reload
            deviceID:
              - this
        double_tap_action:
          action: fire-dom-event
          browser_mod:
            command: window_reload
            deviceID:
              - this
        hold_action:
          action: none